crystal_doc_search_index_callback({"repository_name":"halite","body":"![halite-logo](https://github.com/icyleaf/halite/raw/master/halite-logo-small.png)\n\n# Halite\n\n[![Language](https://img.shields.io/badge/language-crystal-776791.svg)](https://github.com/crystal-lang/crystal)\n[![Tag](https://img.shields.io/github/tag/icyleaf/halite.svg)](https://github.com/icyleaf/halite/blob/master/CHANGELOG.md)\n[![Source](https://img.shields.io/badge/source-github-brightgreen.svg)](https://github.com/icyleaf/halite/)\n[![Document](https://img.shields.io/badge/document-api-brightgreen.svg)](https://icyleaf.github.io/halite/)\n[![Build Status](https://github.com/icyleaf/halite/workflows/Linux%20CI/badge.svg)](https://github.com/icyleaf/halite/actions?query=workflow%3A%22Linux+CI%22)\n\nHTTP Requests with a chainable REST API, built-in sessions and middleware written by [Crystal](https://crystal-lang.org/).\nInspired from the **awesome** Ruby's [HTTP](https://github.com/httprb/http)/[RESTClient](https://github.com/rest-client/rest-client)\nand Python's [requests](https://github.com/requests/requests).\n\nBuild in Crystal version `>= 1.0.0`, this document valid with [v0.12.1](https://github.com/icyleaf/halite/blob/master/CHANGELOG.md).\n\n## Index\n\n<!-- TOC -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Making Requests](#making-requests)\n  - [Passing Parameters](#passing-parameters)\n    - [Query string parameters](#query-string-parameters)\n    - [Form data](#form-data)\n    - [File uploads (via form data)](#file-uploads-via-form-data)\n    - [JSON data](#json-data)\n    - [Raw String](#raw-string)\n  - [Passing advanced options](#passing-advanced-options)\n    - [Auth](#auth)\n    - [User Agent](#user-agent)\n    - [Headers](#headers)\n    - [Cookies](#cookies)\n    - [Redirects and History](#redirects-and-history)\n    - [Timeout](#timeout)\n  - [HTTPS](#https)\n  - [Response Handling](#response-handling)\n    - [Response Content](#response-content)\n    - [JSON Content](#json-content)\n    - [Parsing Content](#parsing-content)\n    - [Binary Data](#binary-data)\n  - [Error Handling](#error-handling)\n    - [Raise for status code](#raise-for-status-code)\n- [Middleware](#middleware)\n  - [Write a simple feature](#write-a-simple-feature)\n  - [Write a interceptor](#write-a-interceptor)\n- [Advanced Usage](#advanced-usage)\n  - [Configuring](#configuring)\n  - [Endpoint](#endpoint)\n  - [Sessions](#sessions)\n  - [Streaming Requests](#streaming-requests)\n  - [Logging](#logging)\n  - [Local Cache](#local-cache)\n  - [Link Headers](#link-headers)\n<!-- /TOC -->\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  halite:\n    github: icyleaf/halite\n```\n\n## Usage\n\n```crystal\nrequire \"halite\"\n```\n\n### Making Requests\n\nMake a GET request:\n\n```crystal\n# Direct get url\nHalite.get(\"http://httpbin.org/get\")\n\n# Support NamedTuple as query params\nHalite.get(\"http://httpbin.org/get\", params: {\n  language: \"crystal\",\n  shard: \"halite\"\n})\n\n# Also support Hash as query params\nHalite.get(\"http://httpbin.org/get\", headers: {\n    \"Private-Token\" => \"T0k3n\"\n  }, params: {\n    \"language\" => \"crystal\",\n    \"shard\" => \"halite\"\n  })\n\n# And support chainable\nHalite.header(private_token: \"T0k3n\")\n      .get(\"http://httpbin.org/get\", params: {\n        \"language\" => \"crystal\",\n        \"shard\" => \"halite\"\n      })\n```\n\nSee also all [chainable methods](https://icyleaf.github.io/halite/Halite/Chainable.html).\n\nMany other HTTP methods are available as well:\n\n- `get`\n- `head`\n- `post`\n- `put`\n- `delete`\n- `patch`\n- `options`\n\n### Passing Parameters\n\n#### Query string parameters\n\nUse the `params` argument to add query string parameters to requests:\n\n```crystal\nHalite.get(\"http://httpbin.org/get\", params: { \"firstname\" => \"Olen\", \"lastname\" => \"Rosenbaum\" })\n```\n\n#### Form data\n\nUse the `form` argument to pass data serialized as form encoded:\n\n```crystal\nHalite.post(\"http://httpbin.org/post\", form: { \"firstname\" => \"Olen\", \"lastname\" => \"Rosenbaum\" })\n```\n\n#### File uploads (via form data)\n\nTo upload files as if form data, construct the form as follows:\n\n```crystal\nHalite.post(\"http://httpbin.org/post\", form: {\n  \"username\" => \"Quincy\",\n  \"avatar\" => File.open(\"/Users/icyleaf/quincy_avatar.png\")\n})\n```\n\nIt is possible to upload multiple files:\n\n```crystal\nHalite.post(\"http://httpbin.org/post\", form: {\n  photos: [\n    File.open(\"/Users/icyleaf/photo1.png\"),\n    File.open(\"/Users/icyleaf/photo2.png\")\n  ],\n  album_name: \"samples\"\n})\n```\n\nOr pass the name with `[]`:\n\n```crystal\nHalite.post(\"http://httpbin.org/post\", form: {\n  \"photos[]\" => [\n    File.open(\"/Users/icyleaf/photo1.png\"),\n    File.open(\"/Users/icyleaf/photo2.png\")\n  ],\n  \"album_name\" => \"samples\"\n})\n```\n\nMultiple files can also be uploaded using both ways above, it depend on web server.\n\n#### JSON data\n\nUse the `json` argument to pass data serialized as body encoded:\n\n```crystal\nHalite.post(\"http://httpbin.org/post\", json: { \"firstname\" => \"Olen\", \"lastname\" => \"Rosenbaum\" })\n```\n\n#### Raw String\n\nUse the `raw` argument to pass raw string as body and set the `Content-Type` manually:\n\n```crystal\n# Set content-type to \"text/plain\" by default\nHalite.post(\"http://httpbin.org/post\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&language=C%2B%2B\")\n\n# Set content-type manually\nHalite.post(\"http://httpbin.org/post\",\n  headers: {\n    \"content-type\" => \"application/json\"\n  },\n  raw: %Q{{\"name\":\"Peter Lee\",\"address\":\"23123 Happy Ave\",\"language\":\"C++\"}}\n)\n```\n\n### Passing advanced options\n\n#### Auth\n\nUse the `#basic_auth` method to perform [HTTP Basic Authentication](http://tools.ietf.org/html/rfc2617) using a username and password:\n\n```crystal\nHalite.basic_auth(user: \"user\", pass: \"p@ss\").get(\"http://httpbin.org/get\")\n\n# We can pass a raw authorization header using the auth method:\nHalite.auth(\"Bearer dXNlcjpwQHNz\").get(\"http://httpbin.org/get\")\n```\n\n#### User Agent\n\nUse the `#user_agent` method to overwrite default one:\n\n```crystal\nHalite.user_agent(\"Crystal Client\").get(\"http://httpbin.org/user-agent\")\n```\n\n#### Headers\n\nHere are two way to passing headers data:\n\n##### 1. Use the `#headers` method\n\n```crystal\nHalite.headers(private_token: \"T0k3n\").get(\"http://httpbin.org/get\")\n\n# Also support Hash or NamedTuple\nHalite.headers({ \"private_token\" => \"T0k3n\" }).get(\"http://httpbin.org/get\")\n\n# Or\nHalite.headers({ private_token: \"T0k3n\" }).get(\"http://httpbin.org/get\")\n```\n\n##### 2. Use the `headers` argument in the available request method:\n\n```crystal\nHalite.get(\"http://httpbin.org/anything\" , headers: { private_token: \"T0k3n\" })\n\nHalite.post(\"http://httpbin.org/anything\" , headers: { private_token: \"T0k3n\" })\n```\n\n#### Cookies\n\n##### Passing cookies in requests\n\nThe `Halite.cookies` option can be used to configure cookies for a given request:\n\n```crystal\nHalite.cookies(session_cookie: \"6abaef100b77808ceb7fe26a3bcff1d0\")\n      .get(\"http://httpbin.org/headers\")\n```\n\n##### Get cookies in requests\n\nTo obtain the cookies(cookie jar) for a given response, call the `#cookies` method:\n\n```crystal\nr = Halite.get(\"http://httpbin.org/cookies?set?session_cookie=6abaef100b77808ceb7fe26a3bcff1d0\")\npp r.cookies\n# => #<HTTP::Cookies:0x10dbed980 @cookies={\"session_cookie\" =>#<HTTP::Cookie:0x10ec20f00 @domain=nil, @expires=nil, @extension=nil, @http_only=false, @name=\"session_cookie\", @path=\"/\", @secure=false, @value=\"6abaef100b77808ceb7fe26a3bcff1d0\">}>\n```\n\n#### Redirects and History\n\n##### Automatically following redirects\n\nThe `Halite.follow` method can be used for automatically following redirects(Max up to 5 times):\n\n```crystal\n# Set the cookie and redirect to http://httpbin.org/cookies\nHalite.follow\n      .get(\"http://httpbin.org/cookies/set/name/foo\")\n```\n\n##### Limiting number of redirects\n\nAs above, set over 5 times, it will raise a `Halite::TooManyRedirectsError`, but you can change less if you can:\n\n```crystal\nHalite.follow(2)\n      .get(\"http://httpbin.org/relative-redirect/5\")\n```\n\n##### Disabling unsafe redirects\n\nIt only redirects with `GET`, `HEAD` request and returns a `300`, `301`, `302` by default, otherwise it will raise a `Halite::StateError`.\nWe can disable it to set `:strict` to `false` if we want any method(verb) requests, in which case the `GET` method(verb) will be used for\nthat redirect:\n\n```crystal\nHalite.follow(strict: false)\n      .post(\"http://httpbin.org/relative-redirect/5\")\n```\n\n##### History\n\n`Response#history` property list contains the `Response` objects that were created in order to complete the request.\nThe list is ordered from the oldest to most recent response.\n\n```crystal\nr = Halite.follow\n          .get(\"http://httpbin.org/redirect/3\")\n\nr.uri\n# => http://httpbin.org/get\n\nr.status_code\n# => 200\n\nr.history\n# => [\n#      #<Halite::Response HTTP/1.1 302 FOUND {\"Location\" => \"/relative-redirect/2\" ...>,\n#      #<Halite::Response HTTP/1.1 302 FOUND {\"Location\" => \"/relative-redirect/1\" ...>,\n#      #<Halite::Response HTTP/1.1 302 FOUND {\"Location\" => \"/get\" ...>,\n#      #<Halite::Response HTTP/1.1 200 OK    {\"Content-Type\" => \"application/json\" ...>\n#    ]\n```\n\n**NOTE**: It contains the `Response` object if you use `history` and HTTP was not a `30x`, For example:\n\n```crystal\nr = Halite.get(\"http://httpbin.org/get\")\nr.history.size # => 0\n\nr = Halite.follow\n          .get(\"http://httpbin.org/get\")\nr.history.size # => 1\n```\n\n#### Timeout\n\nBy default, the Halite does not enforce timeout on a request.\nWe can enable per operation timeouts by configuring them through the chaining API.\n\nThe `connect` timeout is the number of seconds Halite will wait for our client to establish a connection to a remote server call on the socket.\n\nOnce our client has connected to the server and sent the HTTP request,\nthe `read` timeout is the number of seconds the client will wait for the server to send a response.\n\n```crystal\n# Separate set connect and read timeout\nHalite.timeout(connect: 3.0, read: 2.minutes)\n      .get(\"http://httpbin.org/anything\")\n\n# Boath set connect and read timeout\n# The timeout value will be applied to both the connect and the read timeouts.\nHalite.timeout(5)\n      .get(\"http://httpbin.org/anything\")\n```\n\n### HTTPS\n\nThe Halite supports HTTPS via Crystal's built-in OpenSSL module. All you have to do in order to use HTTPS is pass in an https://-prefixed URL.\n\nTo use client certificates, you can pass in a custom `OpenSSL::SSL::Context::Client` object containing the certificates you wish to use:\n\n```crystal\ntls = OpenSSL::SSL::Context::Client.new\ntls.ca_certificates = File.expand_path(\"~/client.crt\")\ntls.private_key = File.expand_path(\"~/client.key\")\n\nHalite.get(\"https://httpbin.org/anything\", tls: tls)\n```\n\n### Response Handling\n\nAfter an HTTP request, `Halite::Response` object have several useful methods. (Also see the [API documentation](https://icyleaf.github.io/halite/Halite/Response.html)).\n\n- **#body**: The response body.\n- **#body_io**: The response body io only available in streaming requests.\n- **#status_code**: The HTTP status code.\n- **#content_type**: The content type of the response.\n- **#content_length**: The content length of the response.\n- **#cookies**: A `HTTP::Cookies` set by server.\n- **#headers**: A `HTTP::Headers` of the response.\n- **#links**: A list of `Halite::HeaderLink` set from headers.\n- **#parse**: (return value depends on MIME type) parse the body using a parser defined for the `#content_type`.\n- **#to_a**: Return a `Hash` of status code, response headers and body as a string.\n- **#to_raw**: Return a raw of response as a string.\n- **#to_s**: Return response body as a string.\n- **#version**: The HTTP version.\n\n#### Response Content\n\nWe can read the content of the server's response by call `#body`:\n\n```crystal\nr = Halite.get(\"http://httpbin.org/user-agent\")\nr.body\n# => {\"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36\"}\n```\n\nThe `gzip` and `deflate` transfer-encodings are automatically decoded for you.\nAnd requests will automatically decode content from the server. Most unicode charsets are seamlessly decoded.\n\n#### JSON Content\n\nThere’s also a built-in a JSON adapter, in case you’re dealing with JSON data:\n\n```crystal\nr = Halite.get(\"http://httpbin.org/user-agent\")\nr.parse(\"json\")\nr.parse # simplily by default\n# => {\n# =>   \"user-agent\" => \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Safari/537.36\"\n# => }\n```\n\n#### Parsing Content\n\n`Halite::Response` has a MIME type adapter system that you can use a decoder to parse the content,\nwe can inherit `Halite::MimeTypes::Adapter` to make our adapter:\n\n```crystal\n# Define a MIME type adapter\nclass YAMLAdapter < Halite::MimeType::Adapter\n  def decode(string)\n    YAML.parse(string)\n  end\n\n  def encode(obj)\n    obj.to_yaml\n  end\nend\n\n# Register to Halite to invoke\nHalite::MimeType.register YAMLAdapter.new, \"application/x-yaml\", \"yaml\", \"yml\"\n\n# Test it!\nr = Halite.get \"https://raw.githubusercontent.com/icyleaf/halite/master/shard.yml\"\nr.parse(\"yaml\") # or \"yml\"\n# => {\"name\" => \"halite\", \"version\" => \"0.4.0\", \"authors\" => [\"icyleaf <icyleaf.cn@gmail.com>\"], \"crystal\" => \"0.25.0\", \"license\" => \"MIT\"}\n```\n\n#### Binary Data\n\nStore binary data (eg, `application/octet-stream`) to file, you can use [streaming requests](#streaming-requests):\n\n```crystal\nHalite.get(\"https://github.com/icyleaf/halite/archive/master.zip\") do |response|\n  filename = response.filename || \"halite-master.zip\"\n  File.open(filename, \"w\") do |file|\n    IO.copy(response.body_io, file)\n  end\nend\n```\n\n### Error Handling\n\n- For any status code, a `Halite::Response` will be returned.\n- If request timeout, a `Halite::TimeoutError` will be raised.\n- If a request exceeds the configured number of maximum redirections, a `Halite::TooManyRedirectsError` will raised.\n- If request uri is http and configured tls context, a `Halite::RequestError` will raised.\n- If request uri is invalid, a `Halite::ConnectionError`/`Halite::UnsupportedMethodError`/`Halite::UnsupportedSchemeError` will raised.\n\n#### Raise for status code\n\nIf we made a bad request(a 4xx client error or a 5xx server error response), we can raise with `Halite::Response.raise_for_status`.\n\nBut, since our `status_code` was not `4xx` or `5xx`, it returns `nil` when we call it:\n\n```crystal\nurls = [\n  \"https://httpbin.org/status/404\",\n  \"https://httpbin.org/status/500?foo=bar\",\n  \"https://httpbin.org/status/200\",\n]\n\nurls.each do |url|\n  r = Halite.get url\n  begin\n    r.raise_for_status\n    p r.body\n  rescue ex : Halite::ClientError | Halite::ServerError\n    p \"[#{ex.status_code}] #{ex.status_message} (#{ex.class})\"\n  end\nend\n\n# => \"[404] not found error with url: https://httpbin.org/status/404 (Halite::Exception::ClientError)\"\n# => \"[500] internal server error error with url: https://httpbin.org/status/500?foo=bar (Halite::Exception::ServerError)\"\n# => \"\"\n```\n\n## Middleware\n\nHalite now has middleware (a.k.a features) support providing a simple way to plug in intermediate custom logic\nin your HTTP client, allowing you to monitor outgoing requests, incoming responses, and use it as an interceptor.\n\nAvailable features:\n\n- [Logging](#logging) (Yes, logging is based on feature, cool, aha!)\n- [Local Cache](#local-cache) (local storage, speed up in development)\n\n### Write a simple feature\n\nLet's implement simple middleware that prints each request:\n\n```crystal\nclass RequestMonister < Halite::Feature\n  @label : String\n  def initialize(**options)\n    @label = options.fetch(:label, \"\")\n  end\n\n  def request(request) : Halite::Request\n    puts @label\n    puts request.verb\n    puts request.uri\n    puts request.body\n\n    request\n  end\n\n  Halite.register_feature \"request_monster\", self\nend\n```\n\nThen use it in Halite:\n\n```crystal\nHalite.use(\"request_monster\", label: \"testing\")\n      .post(\"http://httpbin.org/post\", form: {name: \"foo\"})\n\n# Or configure to client\nclient = Halite::Client.new do\n  use \"request_monster\", label: \"testing\"\nend\n\nclient.post(\"http://httpbin.org/post\", form: {name: \"foo\"})\n\n# => testing\n# => POST\n# => http://httpbin.org/post\n# => name=foo\n```\n\n### Write a interceptor\n\nHalite's killer feature is the **interceptor**, Use `Halite::Feature::Chain` to process with two result:\n\n- `next`: perform and run next interceptor\n- `return`: perform and return\n\nSo, you can intercept and turn to the following registered features.\n\n```crystal\nclass AlwaysNotFound < Halite::Feature\n  def intercept(chain)\n    response = chain.perform\n    response = Halite::Response.new(chain.request.uri, 404, response.body, response.headers)\n    chain.next(response)\n  end\n\n  Halite.register_feature \"404\", self\nend\n\nclass PoweredBy < Halite::Feature\n  def intercept(chain)\n    if response = chain.response\n      response.headers[\"X-Powered-By\"] = \"Halite\"\n      chain.return(response)\n    else\n      chain\n    end\n  end\n\n  Halite.register_feature \"powered_by\", self\nend\n\nr = Halite.use(\"404\").use(\"powered_by\").get(\"http://httpbin.org/user-agent\")\nr.status_code               # => 404\nr.headers[\"X-Powered-By\"]   # => Halite\nr.body                      # => {\"user-agent\":\"Halite/0.6.0\"}\n```\n\nFor more implementation details about the feature layer, see the [Feature](https://github.com/icyleaf/halite/blob/master/src/halite/feature.cr#L2) class and [examples](https://github.com/icyleaf/halite/tree/master/src/halite/features) and [specs](https://github.com/icyleaf/halite/blob/master/spec/spec_helper.cr#L23).\n\n## Advanced Usage\n\n### Configuring\n\nHalite provides a traditional way to instance client, and you can configure any chainable methods with block:\n\n```crystal\nclient = Halite::Client.new do\n  # Set basic auth\n  basic_auth \"username\", \"password\"\n\n  # Enable logging\n  logging true\n\n  # Set timeout\n  timeout 10.seconds\n\n  # Set user agent\n  headers user_agent: \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"\nend\n\n# You also can configure in this way\nclient.accept(\"application/json\")\n\nr = client.get(\"http://httpbin.org/get\")\n```\n\n### Endpoint\n\nNo more given endpoint per request, use `endpoint` will make the request URI shorter, you can set it in flexible way:\n\n```crystal\nclient = Halite::Client.new do\n  endpoint \"https://gitlab.org/api/v4\"\n  user_agent \"Halite\"\nend\n\nclient.get(\"users\")       # GET https://gitlab.org/api/v4/users\n\n# You can override the path by using an absolute path\nclient.get(\"/users\")      # GET https://gitlab.org/users\n```\n\n### Sessions\n\nAs like [requests.Session()](http://docs.python-requests.org/en/master/user/advanced/#session-objects), Halite built-in session by default.\n\nLet's persist some cookies across requests:\n\n```crystal\nclient = Halite::Client.new\nclient.get(\"http://httpbin.org/cookies/set?private_token=6abaef100b77808ceb7fe26a3bcff1d0\")\nclient.get(\"http://httpbin.org/cookies\")\n# => 2018-06-25 18:41:05 +08:00 | request | GET    | http://httpbin.org/cookies/set?private_token=6abaef100b77808ceb7fe26a3bcff1d0\n# => 2018-06-25 18:41:06 +08:00 | response | 302    | http://httpbin.org/cookies/set?private_token=6abaef100b77808ceb7fe26a3bcff1d0 | text/html\n# => <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n# => <title>Redirecting...</title>\n# => <h1>Redirecting...</h1>\n# => <p>You should be redirected automatically to target URL: <a href=\"/cookies\">/cookies</a>.  If not click the link.\n# => 2018-06-25 18:41:06 +08:00 | request | GET    | http://httpbin.org/cookies\n# => 2018-06-25 18:41:07 +08:00 | response | 200    | http://httpbin.org/cookies | application/json\n# => {\"cookies\":{\"private_token\":\"6abaef100b77808ceb7fe26a3bcff1d0\"}}\n```\n\nAll it support with [chainable methods](https://icyleaf.github.io/halite/Halite/Chainable.html) in the other examples list in [requests.Session](http://docs.python-requests.org/en/master/user/advanced/#session-objects).\n\nNote, however, that chainable methods will not be persisted across requests, even if using a session. This example will only send the cookies or headers with the first request, but not the second:\n\n```crystal\nclient = Halite::Client.new\nr = client.cookies(\"username\": \"foobar\").get(\"http://httpbin.org/cookies\")\nr.body # => {\"cookies\":{\"username\":\"foobar\"}}\n\nr = client.get(\"http://httpbin.org/cookies\")\nr.body # => {\"cookies\":{}}\n```\n\nIf you want to manually add cookies, headers (even features etc) to your session, use the methods start with `with_` in `Halite::Options`\nto manipulate them:\n\n```crystal\nr = client.get(\"http://httpbin.org/cookies\")\nr.body # => {\"cookies\":{}}\n\nclient.options.with_cookie(\"username\": \"foobar\")\nr = client.get(\"http://httpbin.org/cookies\")\nr.body # => {\"cookies\":{\"username\":\"foobar\"}}\n```\n\n### Streaming Requests\n\nSimilar to [HTTP::Client](https://crystal-lang.org/api/0.36.1/HTTP/Client.html#streaming) usage with a block,\nyou can easily use same way, but Halite returns a `Halite::Response` object:\n\n```crystal\nr = Halite.get(\"http://httpbin.org/stream/5\") do |response|\n  response.status_code                  # => 200\n  response.body_io.each_line do |line|\n    puts JSON.parse(line)               # => {\"url\" => \"http://httpbin.org/stream/5\", \"args\" => {}, \"headers\" => {\"Host\" => \"httpbin.org\", \"Connection\" => \"close\", \"User-Agent\" => \"Halite/0.8.0\", \"Accept\" => \"*/*\", \"Accept-Encoding\" => \"gzip, deflate\"}, \"id\" => 0_i64}\n  end\nend\n```\n\n> **Warning**:\n>\n> `body_io` is avaiabled as an `IO` and not reentrant safe. Might throws a \"Nil assertion failed\" exception if there is no data in the `IO`\n(such like `head` requests). Calling this method multiple times causes some of the received data being lost.\n>\n> One more thing, use streaming requests the response will always [enable redirect](#redirects-and-history) automatically.\n\n### Logging\n\nHalite does not enable logging on each request and response too.\nWe can enable per operation logging by configuring them through the chaining API.\n\nBy default, Halite will logging all outgoing HTTP requests and their responses(without binary stream) to `STDOUT` on DEBUG level.\nYou can configuring the following options:\n\n- `logging`: Instance your `Halite::Logging::Abstract`, check [Use the custom logging](#use-the-custom-logging).\n- `format`: Output format, built-in `common` and `json`, you can write your own.\n- `file`: Write to file with path, works with `format`.\n- `filemode`: Write file mode, works with `format`, by default is `a`. (append to bottom, create it if file is not exist)\n- `skip_request_body`: By default is `false`.\n- `skip_response_body`: By default is `false`.\n- `skip_benchmark`: Display elapsed time, by default is `false`.\n- `colorize`: Enable colorize in terminal, only apply in `common` format, by default is `true`.\n\n> **NOTE**: `format` (`file` and `filemode`) and `logging` are conflict, you can not use both.\n\nLet's try with it:\n\n```crystal\n# Logging json request\nHalite.logging\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# => 2018-06-25 18:33:14 +08:00 | request  | GET    | http://httpbin.org/get?name=foobar\n# => 2018-06-25 18:33:15 +08:00 | response | 200    | http://httpbin.org/get?name=foobar | 381.32ms | application/json\n# => {\"args\":{\"name\":\"foobar\"},\"headers\":{\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate\",\"Connection\":\"close\",\"Host\":\"httpbin.org\",\"User-Agent\":\"Halite/0.3.2\"},\"origin\":\"60.206.194.34\",\"url\":\"http://httpbin.org/get?name=foobar\"}\n\n# Logging image request\nHalite.logging\n      .get(\"http://httpbin.org/image/png\")\n\n# => 2018-06-25 18:34:15 +08:00 | request  | GET    | http://httpbin.org/image/png\n# => 2018-06-25 18:34:15 +08:00 | response | 200    | http://httpbin.org/image/png | image/png\n\n# Logging with options\nHalite.logging(skip_request_body: true, skip_response_body: true)\n      .post(\"http://httpbin.org/get\", form: {image: File.open(\"halite-logo.png\")})\n\n# => 2018-08-28 14:33:19 +08:00 | request  | POST   | http://httpbin.org/post\n# => 2018-08-28 14:33:21 +08:00 | response | 200    | http://httpbin.org/post | 1.61s | application/json\n```\n\n#### JSON-formatted logging\n\nIt has JSON formatted for developer friendly logging.\n\n```\nHalite.logging(format: \"json\")\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n```\n\n#### Write to a log file\n\n```crystal\n# Write plain text to a log file\nLog.setup(\"halite.file\", backend: Log::IOBackend.new(File.open(\"/tmp/halite.log\", \"a\")))\nHalite.logging(for: \"halite.file\", skip_benchmark: true, colorize: false)\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# Write json data to a log file\nLog.setup(\"halite.file\", backend: Log::IOBackend.new(File.open(\"/tmp/halite.log\", \"a\")))\nHalite.logging(format: \"json\", for: \"halite.file\")\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# Redirect *all* logging from Halite to a file:\nLog.setup(\"halite\", backend: Log::IOBackend.new(File.open(\"/tmp/halite.log\", \"a\")))\n```\n\n#### Use the custom logging\n\nCreating the custom logging by integration `Halite::Logging::Abstract` abstract class.\nHere has two methods must be implement: `#request` and `#response`.\n\n```crystal\nclass CustomLogging < Halite::Logging::Abstract\n  def request(request)\n    @logger.info { \"| >> | %s | %s %s\" % [request.verb, request.uri, request.body] }\n  end\n\n  def response(response)\n    @logger.info { \"| << | %s | %s %s\" % [response.status_code, response.uri, response.content_type] }\n  end\nend\n\n# Add to adapter list (optional)\nHalite::Logging.register \"custom\", CustomLogging.new\n\nHalite.logging(logging: CustomLogging.new)\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# We can also call it use format name if you added it.\nHalite.logging(format: \"custom\")\n      .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# => 2017-12-13 16:40:13 +08:00 | >> | GET | http://httpbin.org/get?name=foobar\n# => 2017-12-13 16:40:15 +08:00 | << | 200 | http://httpbin.org/get?name=foobar application/json\n```\n\n### Local Cache\n\nLocal cache feature is caching responses easily with Halite through an chainable method that is simple and elegant\nyet powerful. Its aim is to focus on the HTTP part of caching and do not worrying about how stuff stored, api rate limiting\neven works without network(offline).\n\nIt has the following options:\n\n- `file`: Load cache from file. it conflict with `path` and `expires`.\n- `path`: The path of cache, default is \"/tmp/halite/cache/\"\n- `expires`: The expires time of cache, default is never expires.\n- `debug`: The debug mode of cache, default is `true`\n\nWith debug mode, cached response it always included some headers information:\n\n- `X-Halite-Cached-From`: Cache source (cache or file)\n- `X-Halite-Cached-Key`: Cache key with verb, uri and body (return with cache, not `file` passed)\n- `X-Halite-Cached-At`:  Cache created time\n- `X-Halite-Cached-Expires-At`: Cache expired time (return with cache, not `file` passed)\n\n```crystal\nHalite.use(\"cache\").get \"http://httpbin.org/anything\"     # request a HTTP\nr = Halite.use(\"cache\").get \"http://httpbin.org/anything\" # request from local storage\nr.headers                                                 # => {..., \"X-Halite-Cached-At\" => \"2018-08-30 10:41:14 UTC\", \"X-Halite-Cached-By\" => \"Halite\", \"X-Halite-Cached-Expires-At\" => \"2018-08-30 10:41:19 UTC\", \"X-Halite-Cached-Key\" => \"2bb155e6c8c47627da3d91834eb4249a\"}}\n```\n\n### Link Headers\n\nMany HTTP APIs feature [Link headers](https://tools.ietf.org/html/rfc5988). GitHub uses\nthese for [pagination](https://developer.github.com/v3/#pagination) in their API, for example:\n\n```crystal\nr = Halite.get \"https://api.github.com/users/icyleaf/repos?page=1&per_page=2\"\nr.links\n# => {\"next\" =>\n# =>   Halite::HeaderLink(\n# =>    @params={},\n# =>    @rel=\"next\",\n# =>    @target=\"https://api.github.com/user/17814/repos?page=2&per_page=2\"),\n# =>  \"last\" =>\n# =>   Halite::HeaderLink(\n# =>    @params={},\n# =>    @rel=\"last\",\n# =>    @target=\"https://api.github.com/user/17814/repos?page=41&per_page=2\")}\n\nr.links[\"next\"]\n# => \"https://api.github.com/user/17814/repos?page=2&per_page=2\"\n\nr.links[\"next\"].params\n# => {}\n```\n\n## Help and Discussion\n\nYou can browse the API documents:\n\nhttps://icyleaf.github.io/halite/\n\nYou can browse the all chainable methods:\n\nhttps://icyleaf.github.io/halite/Halite/Chainable.html\n\nYou can browse the Changelog:\n\nhttps://github.com/icyleaf/halite/blob/master/CHANGELOG.md\n\nIf you have found a bug, please create a issue here:\n\nhttps://github.com/icyleaf/halite/issues/new\n\n## Donate\n\nHalite is a open source, collaboratively funded project. If you run a business and are using Halite in a revenue-generating product,\nit would make business sense to sponsor Halite development. Individual users are also welcome to make a one time donation\nif Halite has helped you in your work or personal projects.\n\nYou can donate via [Paypal](https://www.paypal.me/icyleaf/5).\n\n## How to Contribute\n\nYour contributions are always welcome! Please submit a pull request or create an issue to add a new question, bug or feature to the list.\n\nAll [Contributors](https://github.com/icyleaf/halite/graphs/contributors) are on the wall.\n\n## You may also like\n\n- [totem](https://github.com/icyleaf/totem) - Load and parse a configuration file or string in JSON, YAML, dotenv formats.\n- [markd](https://github.com/icyleaf/markd) - Yet another markdown parser built for speed, Compliant to CommonMark specification.\n- [poncho](https://github.com/icyleaf/poncho) - A .env parser/loader improved for performance.\n- [popcorn](https://github.com/icyleaf/popcorn) - Easy and Safe casting from one type to another.\n- [fast-crystal](https://github.com/icyleaf/fast-crystal) - 💨 Writing Fast Crystal 😍 -- Collect Common Crystal idioms.\n\n## License\n\n[MIT License](https://github.com/icyleaf/halite/blob/master/LICENSE) © icyleaf\n","program":{"html_id":"halite/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"halite","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"halite/Halite","path":"Halite.html","kind":"module","full_name":"Halite","name":"Halite","abstract":false,"locations":[{"filename":"src/halite.cr","line_number":4,"url":null},{"filename":"src/halite/chainable.cr","line_number":3,"url":null},{"filename":"src/halite/client.cr","line_number":8,"url":null},{"filename":"src/halite/error.cr","line_number":1,"url":null},{"filename":"src/halite/feature.cr","line_number":1,"url":null},{"filename":"src/halite/features/cache.cr","line_number":5,"url":null},{"filename":"src/halite/features/logging.cr","line_number":10,"url":null},{"filename":"src/halite/form_data.cr","line_number":4,"url":null},{"filename":"src/halite/header_link.cr","line_number":1,"url":null},{"filename":"src/halite/mime_type.cr","line_number":1,"url":null},{"filename":"src/halite/options.cr","line_number":4,"url":null},{"filename":"src/halite/options/follow.cr","line_number":1,"url":null},{"filename":"src/halite/options/timeout.cr","line_number":1,"url":null},{"filename":"src/halite/rate_limit.cr","line_number":1,"url":null},{"filename":"src/halite/redirector.cr","line_number":1,"url":null},{"filename":"src/halite/request.cr","line_number":1,"url":null},{"filename":"src/halite/response.cr","line_number":1,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.12.1\""}],"extended_modules":[{"html_id":"halite/Halite/Chainable","kind":"module","full_name":"Halite::Chainable","name":"Chainable"},{"html_id":"halite/Halite/FeatureRegister","kind":"module","full_name":"Halite::FeatureRegister","name":"FeatureRegister"}],"types":[{"html_id":"halite/Halite/Cache","path":"Halite/Cache.html","kind":"class","full_name":"Halite::Cache","name":"Cache","abstract":false,"superclass":{"html_id":"halite/Halite/Feature","kind":"class","full_name":"Halite::Feature","name":"Feature"},"ancestors":[{"html_id":"halite/Halite/Feature","kind":"class","full_name":"Halite::Feature","name":"Feature"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/cache.cr","line_number":27,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_PATH","name":"DEFAULT_PATH","value":"\"/tmp/halite/cache/\""}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Cache feature use for caching HTTP response to local storage to speed up in developing stage.\n\nIt has the following options:\n\n- `file`: Load cache from file. it conflict with `path` and `expires`.\n- `path`: The path of cache, default is \"/tmp/halite/cache/\"\n- `expires`: The expires time of cache, default is never expires.\n- `debug`: The debug mode of cache, default is `true`\n\nWith debug mode, cached response it always included some headers information:\n\n- `X-Halite-Cached-From`: Cache source (cache or file)\n- `X-Halite-Cached-Key`: Cache key with verb, uri and body (return with cache, not `file` passed)\n- `X-Halite-Cached-At`:  Cache created time\n- `X-Halite-Cached-Expires-At`: Cache expired time (return with cache, not `file` passed)\n\n```\nHalite.use(\"cache\").get \"http://httpbin.org/anything\"     # request a HTTP\nr = Halite.use(\"cache\").get \"http://httpbin.org/anything\" # request from local storage\nr.headers                                                 # => {..., \"X-Halite-Cached-At\" => \"2018-08-30 10:41:14 UTC\", \"X-Halite-Cached-By\" => \"Halite\", \"X-Halite-Cached-Expires-At\" => \"2018-08-30 10:41:19 UTC\", \"X-Halite-Cached-Key\" => \"2bb155e6c8c47627da3d91834eb4249a\"}}\n```","summary":"<p>Cache feature use for caching HTTP response to local storage to speed up in developing stage.</p>","constructors":[{"html_id":"new(**options)-class-method","name":"new","doc":"return a new Cache instance\n\nAccepts argument:\n\n- **debug**: `Bool`\n- **path**: `String`\n- **expires**: `(Int32 | Time::Span)?`","summary":"<p>return a new Cache instance</p>","abstract":false,"location":{"filename":"src/halite/features/cache.cr","line_number":42,"url":null},"def":{"name":"new","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(**options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"debug:Bool-instance-method","name":"debug","abstract":false,"location":{"filename":"src/halite/features/cache.cr","line_number":33,"url":null},"def":{"name":"debug","return_type":"Bool","visibility":"Public","body":"@debug"}},{"html_id":"expires:Time::Span?-instance-method","name":"expires","abstract":false,"location":{"filename":"src/halite/features/cache.cr","line_number":32,"url":null},"def":{"name":"expires","return_type":"Time::Span | ::Nil","visibility":"Public","body":"@expires"}},{"html_id":"file:String?-instance-method","name":"file","abstract":false,"location":{"filename":"src/halite/features/cache.cr","line_number":30,"url":null},"def":{"name":"file","return_type":"String | ::Nil","visibility":"Public","body":"@file"}},{"html_id":"intercept(chain)-instance-method","name":"intercept","abstract":false,"args":[{"name":"chain","external_name":"chain","restriction":""}],"args_string":"(chain)","args_html":"(chain)","location":{"filename":"src/halite/features/cache.cr","line_number":64,"url":null},"def":{"name":"intercept","args":[{"name":"chain","external_name":"chain","restriction":""}],"visibility":"Public","body":"response = cache(chain) do\n  chain.perform\nend\nchain.return(response)\n"}},{"html_id":"path:String-instance-method","name":"path","abstract":false,"location":{"filename":"src/halite/features/cache.cr","line_number":31,"url":null},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}}]},{"html_id":"halite/Halite/Chainable","path":"Halite/Chainable.html","kind":"module","full_name":"Halite::Chainable","name":"Chainable","abstract":false,"locations":[{"filename":"src/halite/chainable.cr","line_number":4,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"halite/Halite/Client","kind":"class","full_name":"Halite::Client","name":"Client"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"instance_methods":[{"html_id":"accept(value:String):Halite::Client-instance-method","name":"accept","doc":"Accept the given MIME type\n\n```\nHalite.accept(\"application/json\")\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Accept the given MIME type</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Halite::Client","args_html":"(value : String) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":139,"url":null},"def":{"name":"accept","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Halite::Client","visibility":"Public","body":"headers({\"Accept\" => value})"}},{"html_id":"auth(value:String):Halite::Client-instance-method","name":"auth","doc":"Make a request with the given Authorization header\n\n```\nHalite.auth(\"private-token\", \"6abaef100b77808ceb7fe26a3bcff1d0\")\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given Authorization header</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Halite::Client","args_html":"(value : String) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":129,"url":null},"def":{"name":"auth","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Halite::Client","visibility":"Public","body":"headers({\"Authorization\" => value})"}},{"html_id":"basic_auth(user:String,pass:String):Halite::Client-instance-method","name":"basic_auth","doc":"Make a request with the given Basic authorization header\n\n```\nHalite.basic_auth(\"icyleaf\", \"p@ssw0rd\")\n  .get(\"http://httpbin.org/get\")\n```\n\nSee Also: [http://tools.ietf.org/html/rfc2617](http://tools.ietf.org/html/rfc2617)","summary":"<p>Make a request with the given Basic authorization header</p>","abstract":false,"args":[{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"args_string":"(user : String, pass : String) : Halite::Client","args_html":"(user : String, pass : String) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":119,"url":null},"def":{"name":"basic_auth","args":[{"name":"user","external_name":"user","restriction":"String"},{"name":"pass","external_name":"pass","restriction":"String"}],"return_type":"Halite::Client","visibility":"Public","body":"auth(\"Basic \" + (Base64.strict_encode((user + \":\") + pass)))"}},{"html_id":"cookies(cookies:Hash(String,_)|NamedTuple):Halite::Client-instance-method","name":"cookies","doc":"Make a request with the given cookies\n\n```\nHalite.cookies({\"private-token\", \"6abaef100b77808ceb7fe26a3bcff1d0\"})\n      .get(\"http://httpbin.org/get\")\n# Or\nHalite.cookies({private-token: \"6abaef100b77808ceb7fe26a3bcff1d0\"})\n      .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given cookies</p>","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(cookies : Hash(String, _) | NamedTuple) : Halite::Client","args_html":"(cookies : Hash(String, _) | NamedTuple) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":185,"url":null},"def":{"name":"cookies","args":[{"name":"cookies","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple"}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_cookies(cookies))"}},{"html_id":"cookies(cookies:HTTP::Cookies):Halite::Client-instance-method","name":"cookies","doc":"Make a request with the given cookies\n\n```\ncookies = HTTP::Cookies.from_client_headers(headers)\nHalite.cookies(cookies)\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given cookies</p>","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"args_string":"(cookies : HTTP::Cookies) : Halite::Client","args_html":"(cookies : HTTP::Cookies) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":206,"url":null},"def":{"name":"cookies","args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_cookies(cookies))"}},{"html_id":"cookies(**kargs):Halite::Client-instance-method","name":"cookies","doc":"Make a request with the given cookies\n\n```\nHalite.cookies(name: \"icyleaf\", \"gender\": \"male\")\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given cookies</p>","abstract":false,"location":{"filename":"src/halite/chainable.cr","line_number":195,"url":null},"def":{"name":"cookies","double_splat":{"name":"kargs","external_name":"kargs","restriction":""},"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_cookies(kargs))"}},{"html_id":"delete(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"delete","doc":"Delete a resource\n\n### Request with form data\n\n```\nHalite.delete(\"http://httpbin.org/anything\", form: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with json data\n\n```\nHalite.delete(\"http://httpbin.org/anything\", json: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with raw string\n\n```\nHalite.delete(\"http://httpbin.org/anything\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&Language=C%2B%2B\")\n```","summary":"<p>Delete a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"delete","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"delete\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls)"}},{"html_id":"delete(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"delete","doc":"Delete a streaming resource\n\n```\nHalite.delete(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Delete a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"delete","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"delete\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls, &block)"}},{"html_id":"endpoint(endpoint:String|URI):Halite::Client-instance-method","name":"endpoint","doc":"Adds a endpoint to the request.\n\n\n```\nHalite.endpoint(\"https://httpbin.org\")\n  .get(\"/get\")\n```","summary":"<p>Adds a endpoint to the request.</p>","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":"String | URI"}],"args_string":"(endpoint : String | URI) : Halite::Client","args_html":"(endpoint : String | URI) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":107,"url":null},"def":{"name":"endpoint","args":[{"name":"endpoint","external_name":"endpoint","restriction":"String | URI"}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_endpoint(endpoint))"}},{"html_id":"follow(hops:Int32,strict=Halite::Options::Follow::STRICT):Halite::Client-instance-method","name":"follow","doc":"Returns `Options` self with given max hops of redirect times.\n\n```\n# Max hops 3 times\nHalite.follow(3)\n  .get(\"http://httpbin.org/relative-redirect/3\")\n\n# Always redirect with any request methods\nHalite.follow(4, strict: false)\n  .get(\"http://httpbin.org/relative-redirect/4\")\n```","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given max hops of redirect times.</p>","abstract":false,"args":[{"name":"hops","external_name":"hops","restriction":"Int32"},{"name":"strict","default_value":"Halite::Options::Follow::STRICT","external_name":"strict","restriction":""}],"args_string":"(hops : Int32, strict = Halite::Options::Follow::STRICT) : Halite::Client","args_html":"(hops : Int32, strict = <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Options</span><span class=\"t\">::</span><span class=\"t\">Follow</span><span class=\"t\">::</span><span class=\"t\">STRICT</span>) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":271,"url":null},"def":{"name":"follow","args":[{"name":"hops","external_name":"hops","restriction":"Int32"},{"name":"strict","default_value":"Halite::Options::Follow::STRICT","external_name":"strict","restriction":""}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_follow(hops, strict))"}},{"html_id":"follow(strict=Halite::Options::Follow::STRICT):Halite::Client-instance-method","name":"follow","doc":"Returns `Options` self with automatically following redirects.\n\n```\n# Automatically following redirects.\nHalite.follow\n  .get(\"http://httpbin.org/relative-redirect/5\")\n\n# Always redirect with any request methods\nHalite.follow(strict: false)\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with automatically following redirects.</p>","abstract":false,"args":[{"name":"strict","default_value":"Halite::Options::Follow::STRICT","external_name":"strict","restriction":""}],"args_string":"(strict = Halite::Options::Follow::STRICT) : Halite::Client","args_html":"(strict = <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Options</span><span class=\"t\">::</span><span class=\"t\">Follow</span><span class=\"t\">::</span><span class=\"t\">STRICT</span>) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":256,"url":null},"def":{"name":"follow","args":[{"name":"strict","default_value":"Halite::Options::Follow::STRICT","external_name":"strict","restriction":""}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_follow(strict: strict))"}},{"html_id":"get(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"get","doc":"Get a resource\n\n```\nHalite.get(\"http://httpbin.org/anything\", params: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```","summary":"<p>Get a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":5,"url":null},"def":{"name":"get","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"get\", uri, headers: headers, params: params, raw: raw, tls: tls)"}},{"html_id":"get(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"get","doc":"Get a streaming resource\n\n```\nHalite.get(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Get a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":5,"url":null},"def":{"name":"get","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"get\", uri, headers: headers, params: params, raw: raw, tls: tls, &block)"}},{"html_id":"head(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"head","doc":"Head a resource\n\n```\nHalite.head(\"http://httpbin.org/anything\", params: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```","summary":"<p>Head a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":5,"url":null},"def":{"name":"head","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"head\", uri, headers: headers, params: params, raw: raw, tls: tls)"}},{"html_id":"head(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"head","doc":"Head a streaming resource\n\n```\nHalite.head(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Head a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":5,"url":null},"def":{"name":"head","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"head\", uri, headers: headers, params: params, raw: raw, tls: tls, &block)"}},{"html_id":"headers(headers:Hash(String,_)|NamedTuple):Halite::Client-instance-method","name":"headers","doc":"Make a request with the given headers\n\n```\nHalite.headers({\"Content-Type\", \"application/json\", \"Connection\": \"keep-alive\"})\n      .get(\"http://httpbin.org/get\")\n# Or\nHalite.headers({content_type: \"application/json\", connection: \"keep-alive\"})\n      .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given headers</p>","abstract":false,"args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(headers : Hash(String, _) | NamedTuple) : Halite::Client","args_html":"(headers : Hash(String, _) | NamedTuple) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":162,"url":null},"def":{"name":"headers","args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_headers(headers))"}},{"html_id":"headers(**kargs):Halite::Client-instance-method","name":"headers","doc":"Make a request with the given headers\n\n```\nHalite.headers(content_type: \"application/json\", connection: \"keep-alive\")\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Make a request with the given headers</p>","abstract":false,"location":{"filename":"src/halite/chainable.cr","line_number":172,"url":null},"def":{"name":"headers","double_splat":{"name":"kargs","external_name":"kargs","restriction":""},"return_type":"Halite::Client","visibility":"Public","body":"branch(default_options.with_headers(kargs))"}},{"html_id":"logging(enable:Bool=true)-instance-method","name":"logging","doc":"Returns `Options` self with enable or disable logging.\n\n#### Enable logging\n\nSame as call `logging` method without any argument.\n\n```\nHalite.logging.get(\"http://httpbin.org/get\")\n```\n\n#### Disable logging\n\n```\nHalite.logging(false).get(\"http://httpbin.org/get\")\n```","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with enable or disable logging.</p>","abstract":false,"args":[{"name":"enable","default_value":"true","external_name":"enable","restriction":"Bool"}],"args_string":"(enable : Bool = true)","args_html":"(enable : Bool = <span class=\"n\">true</span>)","location":{"filename":"src/halite/chainable.cr","line_number":290,"url":null},"def":{"name":"logging","args":[{"name":"enable","default_value":"true","external_name":"enable","restriction":"Bool"}],"visibility":"Public","body":"options = default_options\noptions.logging = enable\nbranch(options)\n"}},{"html_id":"logging(logging:Halite::Logging::Abstract=Halite::Logging::Common.new)-instance-method","name":"logging","doc":"Returns `Options` self with given the logging which it integration from `Halite::Logging`.\n\n#### Simple logging\n\n```\nHalite.logging\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n=> 2018-08-28 14:33:19 +08:00 | request  | POST   | http://httpbin.org/post\n=> 2018-08-28 14:33:21 +08:00 | response | 200    | http://httpbin.org/post | 1.61s | application/json\n{ ... }\n```\n\n#### Logger configuration\n\nBy default, Halite will logging all outgoing HTTP requests and their responses(without binary stream) to `STDOUT` on DEBUG level.\nYou can configuring the following options:\n\n- `skip_request_body`: By default is `false`.\n- `skip_response_body`: By default is `false`.\n- `skip_benchmark`: Display elapsed time, by default is `false`.\n- `colorize`: Enable colorize in terminal, only apply in `common` format, by default is `true`.\n\n```\nHalite.logging(skip_request_body: true, skip_response_body: true)\n  .post(\"http://httpbin.org/get\", form: {image: File.open(\"halite-logo.png\")})\n\n# => 2018-08-28 14:33:19 +08:00 | request  | POST   | http://httpbin.org/post\n# => 2018-08-28 14:33:21 +08:00 | response | 200    | http://httpbin.org/post | 1.61s | application/json\n```\n\n#### Use custom logging\n\nCreating the custom logging by integration `Halite::Logging::Abstract` abstract class.\nHere has two methods must be implement: `#request` and `#response`.\n\n```\nclass CustomLogger < Halite::Logging::Abstract\n  def request(request)\n    @logger.info \"| >> | %s | %s %s\" % [request.verb, request.uri, request.body]\n  end\n\n  def response(response)\n    @logger.info \"| << | %s | %s %s\" % [response.status_code, response.uri, response.content_type]\n  end\nend\n\n# Add to adapter list (optional)\nHalite::Logging.register_adapter \"custom\", CustomLogger.new\n\nHalite.logging(logging: CustomLogger.new)\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# We can also call it use format name if you added it.\nHalite.logging(format: \"custom\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# => 2017-12-13 16:40:13 +08:00 | >> | GET | http://httpbin.org/get?name=foobar\n# => 2017-12-13 16:40:15 +08:00 | << | 200 | http://httpbin.org/get?name=foobar application/json\n```","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given the logging which it integration from <code><a href=\"../Halite/Logging.html\">Halite::Logging</a></code>.</p>","abstract":false,"args":[{"name":"logging","default_value":"Halite::Logging::Common.new","external_name":"logging","restriction":"Halite::Logging::Abstract"}],"args_string":"(logging : Halite::Logging::Abstract = Halite::Logging::Common.new)","args_html":"(logging : <a href=\"../Halite/Logging/Abstract.html\">Halite::Logging::Abstract</a> = <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Logging</span><span class=\"t\">::</span><span class=\"t\">Common</span>.<span class=\"k\">new</span>)","location":{"filename":"src/halite/chainable.cr","line_number":356,"url":null},"def":{"name":"logging","args":[{"name":"logging","default_value":"Halite::Logging::Common.new","external_name":"logging","restriction":"Halite::Logging::Abstract"}],"visibility":"Public","body":"branch(default_options.with_logging(logging))"}},{"html_id":"logging(format:String=\"common\",*,for:String=\"halite\",skip_request_body=false,skip_response_body=false,skip_benchmark=false,colorize=true)-instance-method","name":"logging","doc":"Returns `Options` self with given the file with the path.\n\n#### JSON-formatted logging\n\n```\nHalite.logging(format: \"json\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n```\n\n#### create a http request and log to file\n\n```\nLog.setup(\"halite.file\", backend: Log::IOBackend.new(File.open(\"/tmp/halite.log\", \"a\")))\nHalite.logging(for: \"halite.file\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n```\n\n#### Always create new log file and store data to JSON formatted\n\n```\nLog.setup(\"halite.file\", backend: Log::IOBackend.new(File.open(\"/tmp/halite.log\", \"w\"))\nHalite.logging(for: \"halite.file\", format: \"json\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n```\n\nCheck the log file content: **/tmp/halite.log**","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given the file with the path.</p>","abstract":false,"args":[{"name":"format","default_value":"\"common\"","external_name":"format","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"for","default_value":"\"halite\"","external_name":"for","restriction":"String"},{"name":"skip_request_body","default_value":"false","external_name":"skip_request_body","restriction":""},{"name":"skip_response_body","default_value":"false","external_name":"skip_response_body","restriction":""},{"name":"skip_benchmark","default_value":"false","external_name":"skip_benchmark","restriction":""},{"name":"colorize","default_value":"true","external_name":"colorize","restriction":""}],"args_string":"(format : String = \"common\", *, for : String = \"halite\", skip_request_body = false, skip_response_body = false, skip_benchmark = false, colorize = true)","args_html":"(format : String = <span class=\"s\">&quot;common&quot;</span>, *, for : String = <span class=\"s\">&quot;halite&quot;</span>, skip_request_body = <span class=\"n\">false</span>, skip_response_body = <span class=\"n\">false</span>, skip_benchmark = <span class=\"n\">false</span>, colorize = <span class=\"n\">true</span>)","location":{"filename":"src/halite/chainable.cr","line_number":386,"url":null},"def":{"name":"logging","args":[{"name":"format","default_value":"\"common\"","external_name":"format","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"for","default_value":"\"halite\"","external_name":"for","restriction":"String"},{"name":"skip_request_body","default_value":"false","external_name":"skip_request_body","restriction":""},{"name":"skip_response_body","default_value":"false","external_name":"skip_response_body","restriction":""},{"name":"skip_benchmark","default_value":"false","external_name":"skip_benchmark","restriction":""},{"name":"colorize","default_value":"true","external_name":"colorize","restriction":""}],"splat_index":1,"visibility":"Public","body":"opts = {for: for, skip_request_body: skip_request_body, skip_response_body: skip_response_body, skip_benchmark: skip_benchmark, colorize: colorize}\nbranch(default_options.with_logging(format, **opts))\n"}},{"html_id":"options(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"options","doc":"Options a resource\n\n### Request with form data\n\n```\nHalite.options(\"http://httpbin.org/anything\", form: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with json data\n\n```\nHalite.options(\"http://httpbin.org/anything\", json: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with raw string\n\n```\nHalite.options(\"http://httpbin.org/anything\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&Language=C%2B%2B\")\n```","summary":"<p>Options a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"options","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"options\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls)"}},{"html_id":"options(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"options","doc":"Options a streaming resource\n\n```\nHalite.options(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Options a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"options","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"options\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls, &block)"}},{"html_id":"patch(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"patch","doc":"Patch a resource\n\n### Request with form data\n\n```\nHalite.patch(\"http://httpbin.org/anything\", form: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with json data\n\n```\nHalite.patch(\"http://httpbin.org/anything\", json: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with raw string\n\n```\nHalite.patch(\"http://httpbin.org/anything\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&Language=C%2B%2B\")\n```","summary":"<p>Patch a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"patch","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"patch\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls)"}},{"html_id":"patch(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"patch","doc":"Patch a streaming resource\n\n```\nHalite.patch(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Patch a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"patch","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"patch\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls, &block)"}},{"html_id":"post(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"post","doc":"Post a resource\n\n### Request with form data\n\n```\nHalite.post(\"http://httpbin.org/anything\", form: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with json data\n\n```\nHalite.post(\"http://httpbin.org/anything\", json: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with raw string\n\n```\nHalite.post(\"http://httpbin.org/anything\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&Language=C%2B%2B\")\n```","summary":"<p>Post a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"post","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"post\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls)"}},{"html_id":"post(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"post","doc":"Post a streaming resource\n\n```\nHalite.post(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Post a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"post","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"post\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls, &block)"}},{"html_id":"put(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"put","doc":"Put a resource\n\n### Request with form data\n\n```\nHalite.put(\"http://httpbin.org/anything\", form: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with json data\n\n```\nHalite.put(\"http://httpbin.org/anything\", json: {\n  first_name: \"foo\",\n  last_name:  \"bar\"\n})\n```\n\n### Request with raw string\n\n```\nHalite.put(\"http://httpbin.org/anything\", raw: \"name=Peter+Lee&address=%23123+Happy+Ave&Language=C%2B%2B\")\n```","summary":"<p>Put a resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"put","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"return_type":"Halite::Response","visibility":"Public","body":"request(\"put\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls)"}},{"html_id":"put(uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"put","doc":"Put a streaming resource\n\n```\nHalite.put(\"http://httpbin.org/anything\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Put a streaming resource</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":42,"url":null},"def":{"name":"put","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":1,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(\"put\", uri, headers: headers, params: params, form: form, json: json, raw: raw, tls: tls, &block)"}},{"html_id":"request(verb:String,uri:String,options:Halite::Options?=nil):Halite::Response-instance-method","name":"request","doc":"Make an HTTP request with the given verb and options\n\n> This method will be executed with oneshot request.\n\n```\nHalite.request(\"get\", \"http://httpbin.org/get\", Halite::Options.new(\n  \"headers\" = { \"user_agent\" => \"halite\" },\n  \"params\" => { \"nickname\" => \"foo\" },\n  \"form\" => { \"username\" => \"bar\" },\n)\n```","summary":"<p>Make an HTTP request with the given verb and options</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"args_string":"(verb : String, uri : String, options : Halite::Options? = nil) : Halite::Response","args_html":"(verb : String, uri : String, options : <a href=\"../Halite/Options.html\">Halite::Options</a>? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":489,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"return_type":"Halite::Response","visibility":"Public","body":"(branch(options)).request(verb, uri)"}},{"html_id":"request(verb:String,uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil):Halite::Response-instance-method","name":"request","doc":"Make an HTTP request with the given verb\n\n```\nHalite.request(\"get\", \"http://httpbin.org/get\", {\n  \"headers\" = { \"user_agent\" => \"halite\" },\n  \"params\" => { \"nickname\" => \"foo\" },\n  \"form\" => { \"username\" => \"bar\" },\n})\n```","summary":"<p>Make an HTTP request with the given verb</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(verb : String, uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil) : Halite::Response","args_html":"(verb : String, uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/chainable.cr","line_number":445,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":2,"return_type":"Halite::Response","visibility":"Public","body":"request(verb, uri, options_with(headers, params, form, json, raw, tls))"}},{"html_id":"request(verb:String,uri:String,options:Halite::Options?=nil,&block:Halite::Response->)-instance-method","name":"request","doc":"Make an HTTP request with the given verb and options\n\n> This method will be executed with oneshot request.\n\n```\nHalite.request(\"get\", \"http://httpbin.org/stream/3\") do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Make an HTTP request with the given verb and options</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"args_string":"(verb : String, uri : String, options : Halite::Options? = nil, &block : Halite::Response -> )","args_html":"(verb : String, uri : String, options : <a href=\"../Halite/Options.html\">Halite::Options</a>? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":505,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"(branch(options)).request(verb, uri, &block)"}},{"html_id":"request(verb:String,uri:String,*,headers:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,tls:OpenSSL::SSL::Context::Client?=nil,&block:Halite::Response->)-instance-method","name":"request","doc":"Make an HTTP request with the given verb and options\n\n> This method will be executed with oneshot request.\n\n```\nHalite.request(\"get\", \"http://httpbin.org/stream/3\", headers: {\"user-agent\" => \"halite\"}) do |response|\n  puts response.status_code\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Make an HTTP request with the given verb and options</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(verb : String, uri : String, *, headers : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, tls : OpenSSL::SSL::Context::Client? = nil, &block : Halite::Response -> )","args_html":"(verb : String, uri : String, *, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/chainable.cr","line_number":467,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"","external_name":"","restriction":""},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":2,"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"request(verb, uri, options_with(headers, params, form, json, raw, tls), &block)"}},{"html_id":"timeout(connect:Int32|Float64|Time::Span?=nil,read:Int32|Float64|Time::Span?=nil,write:Int32|Float64|Time::Span?=nil)-instance-method","name":"timeout","doc":"Adds a timeout to the request.\n\nHow long to wait for the server to send data before giving up, as a int, float or time span.\nThe timeout value will be applied to both the connect and the read timeouts.\n\n```\nHalite.timeout(3, 3.minutes, 5)\n  .post(\"http://httpbin.org/post\", form: {file: \"file.txt\"})\n# Or\nHalite.timeout(3.04, 64, 10.0)\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Adds a timeout to the request.</p>","abstract":false,"args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(connect : Int32 | Float64 | Time::Span? = nil, read : Int32 | Float64 | Time::Span? = nil, write : Int32 | Float64 | Time::Span? = nil)","args_html":"(connect : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, read : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, write : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/chainable.cr","line_number":239,"url":null},"def":{"name":"timeout","args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"visibility":"Public","body":"branch(default_options.with_timeout(connect, read, write))"}},{"html_id":"use(*features)-instance-method","name":"use","doc":"Turn on given the name of features.\n\nAvailable features to review all subclasses of `Halite::Feature`.\n\n```\nHalite.use(\"logging\", \"your-custom-feature-name\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n```","summary":"<p>Turn on given the name of features.</p>","abstract":false,"args":[{"name":"features","external_name":"features","restriction":""}],"args_string":"(*features)","args_html":"(*features)","location":{"filename":"src/halite/chainable.cr","line_number":432,"url":null},"def":{"name":"use","args":[{"name":"features","external_name":"features","restriction":""}],"splat_index":0,"visibility":"Public","body":"branch(default_options.with_features(*features))"}},{"html_id":"use(feature:String,**opts)-instance-method","name":"use","doc":"Turn on given features and its options.\n\nAvailable features to review all subclasses of `Halite::Feature`.\n\n#### Use JSON logging\n\n```\nHalite.use(\"logging\", format: \"json\")\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# => { ... }\n```\n\n#### Use common format logging and skip response body\n```\nHalite.use(\"logging\", format: \"common\", skip_response_body: true)\n  .get(\"http://httpbin.org/get\", params: {name: \"foobar\"})\n\n# => 2018-08-28 14:58:26 +08:00 | request  | GET    | http://httpbin.org/get\n# => 2018-08-28 14:58:27 +08:00 | response | 200    | http://httpbin.org/get | 615.8ms | application/json\n```","summary":"<p>Turn on given features and its options.</p>","abstract":false,"args":[{"name":"feature","external_name":"feature","restriction":"String"}],"args_string":"(feature : String, **opts)","args_html":"(feature : String, **opts)","location":{"filename":"src/halite/chainable.cr","line_number":420,"url":null},"def":{"name":"use","args":[{"name":"feature","external_name":"feature","restriction":"String"}],"double_splat":{"name":"opts","external_name":"opts","restriction":""},"visibility":"Public","body":"branch(default_options.with_features(feature, **opts))"}},{"html_id":"user_agent(value:String):Halite::Client-instance-method","name":"user_agent","doc":"Set requests user agent\n\n```\nHalite.user_agent(\"Custom User Agent\")\n  .get(\"http://httpbin.org/get\")\n```","summary":"<p>Set requests user agent</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(value : String) : Halite::Client","args_html":"(value : String) : <a href=\"../Halite/Client.html\">Halite::Client</a>","location":{"filename":"src/halite/chainable.cr","line_number":149,"url":null},"def":{"name":"user_agent","args":[{"name":"value","external_name":"value","restriction":"String"}],"return_type":"Halite::Client","visibility":"Public","body":"headers({\"User-Agent\" => value})"}}]},{"html_id":"halite/Halite/Client","path":"Halite/Client.html","kind":"class","full_name":"Halite::Client","name":"Client","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Halite/Chainable","kind":"module","full_name":"Halite::Chainable","name":"Chainable"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/client.cr","line_number":36,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"halite/Halite/Chainable","kind":"module","full_name":"Halite::Chainable","name":"Chainable"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Clients make requests and receive responses\n\nSupport all `Chainable` methods.\n\n### Simple setup\n\n```\nclient = Halite::Client.new(headers: {\n  \"private-token\" => \"bdf39d82661358f80b31b67e6f89fee4\"\n})\n\nclient.auth(private_token: \"bdf39d82661358f80b31b67e6f89fee4\").\n      .get(\"http://httpbin.org/get\", params: {\n        name: \"icyleaf\"\n      })\n```\n\n### Setup with block\n\n```\nclient = Halite::Client.new do\n  basic_auth \"name\", \"foo\"\n  headers content_type: \"application/jsong\"\n  read_timeout 3.minutes\n  logging true\nend\n```","summary":"<p>Clients make requests and receive responses</p>","constructors":[{"html_id":"new(options=Halite::Options.new)-class-method","name":"new","doc":"Instance a new client\n\n```\noptions = Halite::Options.new(headers: {\n  \"private-token\" => \"bdf39d82661358f80b31b67e6f89fee4\",\n})\n\nclient = Halite::Client.new(options)\n```","summary":"<p>Instance a new client</p>","abstract":false,"args":[{"name":"options","default_value":"Halite::Options.new","external_name":"options","restriction":""}],"args_string":"(options = Halite::Options.new)","args_html":"(options = <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Options</span>.<span class=\"k\">new</span>)","location":{"filename":"src/halite/client.cr","line_number":100,"url":null},"def":{"name":"new","args":[{"name":"options","default_value":"Halite::Options.new","external_name":"options","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(*,endpoint:String|URI?=nil,headers:Hash(String,_)|NamedTuple?=nil,cookies:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,timeout=Timeout.new,follow=Follow.new,tls:OpenSSL::SSL::Context::Client?=nil)-class-method","name":"new","doc":"Instance a new client\n\n```\nHalite::Client.new(headers: {\"private-token\" => \"bdf39d82661358f80b31b67e6f89fee4\"})\n```","summary":"<p>Instance a new client</p>","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(*, endpoint : String | URI? = nil, headers : Hash(String, _) | NamedTuple? = nil, cookies : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, timeout = Timeout.new, follow = Follow.new, tls : OpenSSL::SSL::Context::Client? = nil)","args_html":"(*, endpoint : String | URI? = <span class=\"n\">nil</span>, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, cookies : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, timeout = <span class=\"t\">Timeout</span>.<span class=\"k\">new</span>, follow = <span class=\"t\">Follow</span>.<span class=\"k\">new</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/client.cr","line_number":44,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"splat_index":0,"visibility":"Public","body":"new(Options.new(endpoint: endpoint, headers: headers, cookies: cookies, params: params, form: form, json: json, raw: raw, tls: tls, timeout: timeout, follow: follow))"}},{"html_id":"new(&)-class-method","name":"new","doc":"Instance a new client with block\n\n```\nclient = Halite::Client.new do\n  basic_auth \"name\", \"foo\"\n  logging true\nend\n```","summary":"<p>Instance a new client with block</p>","abstract":false,"location":{"filename":"src/halite/client.cr","line_number":79,"url":null},"def":{"name":"new","yields":0,"visibility":"Public","body":"instance = new\nyield_instance = with instance yield\nif yield_instance\n  instance = yield_instance\nend\ninstance\n"}}],"instance_methods":[{"html_id":"options:Halite::Options-instance-method","name":"options","abstract":false,"location":{"filename":"src/halite/client.cr","line_number":69,"url":null},"def":{"name":"options","visibility":"Public","body":"@options"}},{"html_id":"options=(options)-instance-method","name":"options=","abstract":false,"args":[{"name":"options","external_name":"options","restriction":""}],"args_string":"(options)","args_html":"(options)","location":{"filename":"src/halite/client.cr","line_number":69,"url":null},"def":{"name":"options=","args":[{"name":"options","external_name":"options","restriction":""}],"visibility":"Public","body":"@options = options"}},{"html_id":"request(verb:String,uri:String,options:Halite::Options?=nil):Halite::Response-instance-method","name":"request","doc":"Make an HTTP request","summary":"<p>Make an HTTP request</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"args_string":"(verb : String, uri : String, options : Halite::Options? = nil) : Halite::Response","args_html":"(verb : String, uri : String, options : <a href=\"../Halite/Options.html\">Halite::Options</a>? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/client.cr","line_number":106,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"return_type":"Halite::Response","visibility":"Public","body":"opts = options ? @default_options.merge(options.not_nil!) : @default_options\nrequest = build_request(verb, uri, opts)\nresponse = perform_chain(request, opts) do\n  perform(request, opts)\nend\nif opts.follow.hops.zero?\n  return response\nend\n(Redirector.new(request, response, opts)).perform do |req|\n  perform(req, opts)\nend\n"}},{"html_id":"request(verb:String,uri:String,options:Halite::Options?=nil,&block:Halite::Response->)-instance-method","name":"request","doc":"Make an HTTP request","summary":"<p>Make an HTTP request</p>","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"args_string":"(verb : String, uri : String, options : Halite::Options? = nil, &block : Halite::Response -> )","args_html":"(verb : String, uri : String, options : <a href=\"../Halite/Options.html\">Halite::Options</a>? = <span class=\"n\">nil</span>, &block : <a href=\"../Halite/Response.html\">Halite::Response</a> -> )","location":{"filename":"src/halite/client.cr","line_number":121,"url":null},"def":{"name":"request","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"String"},{"name":"options","default_value":"nil","external_name":"options","restriction":"Halite::Options | ::Nil"}],"yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Response ->)"},"visibility":"Public","body":"opts = options ? @default_options.merge(options.not_nil!) : @default_options\nrequest = build_request(verb, uri, opts)\nperform(request, opts, &block)\n"}}]},{"html_id":"halite/Halite/Exception","path":"Halite/Exception.html","kind":"module","full_name":"Halite::Exception","name":"Exception","abstract":false,"locations":[{"filename":"src/halite/error.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"types":[{"html_id":"halite/Halite/Exception/APIError","path":"Halite/Exception/APIError.html","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},"ancestors":[{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":49,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/ClientError","kind":"class","full_name":"Halite::Exception::ClientError","name":"ClientError"},{"html_id":"halite/Halite/Exception/ServerError","kind":"class","full_name":"Halite::Exception::ServerError","name":"ServerError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic API error","summary":"<p>Generic API error</p>","constructors":[{"html_id":"new(message:String?=nil,status_code:Int32?=nil,uri:URI?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"status_code","default_value":"nil","external_name":"status_code","restriction":"Int32 | ::Nil"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"URI | ::Nil"}],"args_string":"(message : String? = nil, status_code : Int32? = nil, uri : URI? = nil)","args_html":"(message : String? = <span class=\"n\">nil</span>, status_code : Int32? = <span class=\"n\">nil</span>, uri : URI? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/error.cr","line_number":54,"url":null},"def":{"name":"new","args":[{"name":"message","default_value":"nil","external_name":"message","restriction":"String | ::Nil"},{"name":"status_code","default_value":"nil","external_name":"status_code","restriction":"Int32 | ::Nil"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"URI | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(message, status_code, uri)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"status_code:Int32?-instance-method","name":"status_code","abstract":false,"location":{"filename":"src/halite/error.cr","line_number":51,"url":null},"def":{"name":"status_code","visibility":"Public","body":"@status_code"}},{"html_id":"status_message:String?-instance-method","name":"status_message","abstract":false,"location":{"filename":"src/halite/error.cr","line_number":52,"url":null},"def":{"name":"status_message","return_type":"String | ::Nil","visibility":"Public","body":"@status_message"}},{"html_id":"uri:URI?-instance-method","name":"uri","abstract":false,"location":{"filename":"src/halite/error.cr","line_number":50,"url":null},"def":{"name":"uri","visibility":"Public","body":"@uri"}}]},{"html_id":"halite/Halite/Exception/ClientError","path":"Halite/Exception/ClientError.html","kind":"class","full_name":"Halite::Exception::ClientError","name":"ClientError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/APIError","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError"},"ancestors":[{"html_id":"halite/Halite/Exception/APIError","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError"},{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":77,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"4XX client error","summary":"<p>4XX client error</p>"},{"html_id":"halite/Halite/Exception/ConnectionError","path":"Halite/Exception/ConnectionError.html","kind":"class","full_name":"Halite::Exception::ConnectionError","name":"ConnectionError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},"ancestors":[{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":7,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic Connection error","summary":"<p>Generic Connection error</p>"},{"html_id":"halite/Halite/Exception/EndlessRedirectError","path":"Halite/Exception/EndlessRedirectError.html","kind":"class","full_name":"Halite::Exception::EndlessRedirectError","name":"EndlessRedirectError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/TooManyRedirectsError","kind":"class","full_name":"Halite::Exception::TooManyRedirectsError","name":"TooManyRedirectsError"},"ancestors":[{"html_id":"halite/Halite/Exception/TooManyRedirectsError","kind":"class","full_name":"Halite::Exception::TooManyRedirectsError","name":"TooManyRedirectsError"},{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":43,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Notifies that following redirects got into an endless loop","summary":"<p>Notifies that following redirects got into an endless loop</p>"},{"html_id":"halite/Halite/Exception/Error","path":"Halite/Exception/Error.html","kind":"class","full_name":"Halite::Exception::Error","name":"Error","abstract":false,"superclass":{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":4,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/ConnectionError","kind":"class","full_name":"Halite::Exception::ConnectionError","name":"ConnectionError"},{"html_id":"halite/Halite/Exception/FeatureError","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError"},{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic error","summary":"<p>Generic error</p>"},{"html_id":"halite/Halite/Exception/FeatureError","path":"Halite/Exception/FeatureError.html","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},"ancestors":[{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":16,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/UnRegisterFeatureError","kind":"class","full_name":"Halite::Exception::UnRegisterFeatureError","name":"UnRegisterFeatureError"},{"html_id":"halite/Halite/Exception/UnRegisterLoggerFormatError","kind":"class","full_name":"Halite::Exception::UnRegisterLoggerFormatError","name":"UnRegisterLoggerFormatError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic Feature error","summary":"<p>Generic Feature error</p>"},{"html_id":"halite/Halite/Exception/RequestError","path":"Halite/Exception/RequestError.html","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},"ancestors":[{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":10,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/StateError","kind":"class","full_name":"Halite::Exception::StateError","name":"StateError"},{"html_id":"halite/Halite/Exception/TimeoutError","kind":"class","full_name":"Halite::Exception::TimeoutError","name":"TimeoutError"},{"html_id":"halite/Halite/Exception/UnsupportedMethodError","kind":"class","full_name":"Halite::Exception::UnsupportedMethodError","name":"UnsupportedMethodError"},{"html_id":"halite/Halite/Exception/UnsupportedSchemeError","kind":"class","full_name":"Halite::Exception::UnsupportedSchemeError","name":"UnsupportedSchemeError"},{"html_id":"halite/Halite/Exception/UnsupportedStreamMethodError","kind":"class","full_name":"Halite::Exception::UnsupportedStreamMethodError","name":"UnsupportedStreamMethodError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic Request error","summary":"<p>Generic Request error</p>"},{"html_id":"halite/Halite/Exception/ResponseError","path":"Halite/Exception/ResponseError.html","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},"ancestors":[{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":13,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/APIError","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError"},{"html_id":"halite/Halite/Exception/TooManyRedirectsError","kind":"class","full_name":"Halite::Exception::TooManyRedirectsError","name":"TooManyRedirectsError"},{"html_id":"halite/Halite/Exception/UnRegisterMimeTypeError","kind":"class","full_name":"Halite::Exception::UnRegisterMimeTypeError","name":"UnRegisterMimeTypeError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic Response error","summary":"<p>Generic Response error</p>"},{"html_id":"halite/Halite/Exception/ServerError","path":"Halite/Exception/ServerError.html","kind":"class","full_name":"Halite::Exception::ServerError","name":"ServerError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/APIError","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError"},"ancestors":[{"html_id":"halite/Halite/Exception/APIError","kind":"class","full_name":"Halite::Exception::APIError","name":"APIError"},{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":80,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"5XX server error","summary":"<p>5XX server error</p>"},{"html_id":"halite/Halite/Exception/StateError","path":"Halite/Exception/StateError.html","kind":"class","full_name":"Halite::Exception::StateError","name":"StateError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},"ancestors":[{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":28,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Requested to do something when we're in the wrong state","summary":"<p>Requested to do something when we're in the wrong state</p>"},{"html_id":"halite/Halite/Exception/TimeoutError","path":"Halite/Exception/TimeoutError.html","kind":"class","full_name":"Halite::Exception::TimeoutError","name":"TimeoutError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},"ancestors":[{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":31,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Generic Timeout error","summary":"<p>Generic Timeout error</p>"},{"html_id":"halite/Halite/Exception/TooManyRedirectsError","path":"Halite/Exception/TooManyRedirectsError.html","kind":"class","full_name":"Halite::Exception::TooManyRedirectsError","name":"TooManyRedirectsError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},"ancestors":[{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":40,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Exception/EndlessRedirectError","kind":"class","full_name":"Halite::Exception::EndlessRedirectError","name":"EndlessRedirectError"}],"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"Notifies that we reached max allowed redirect hops","summary":"<p>Notifies that we reached max allowed redirect hops</p>"},{"html_id":"halite/Halite/Exception/UnRegisterFeatureError","path":"Halite/Exception/UnRegisterFeatureError.html","kind":"class","full_name":"Halite::Exception::UnRegisterFeatureError","name":"UnRegisterFeatureError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/FeatureError","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError"},"ancestors":[{"html_id":"halite/Halite/Exception/FeatureError","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":34,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The feature given was not understood","summary":"<p>The feature given was not understood</p>"},{"html_id":"halite/Halite/Exception/UnRegisterLoggerFormatError","path":"Halite/Exception/UnRegisterLoggerFormatError.html","kind":"class","full_name":"Halite::Exception::UnRegisterLoggerFormatError","name":"UnRegisterLoggerFormatError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/FeatureError","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError"},"ancestors":[{"html_id":"halite/Halite/Exception/FeatureError","kind":"class","full_name":"Halite::Exception::FeatureError","name":"FeatureError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":37,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The format given was not understood","summary":"<p>The format given was not understood</p>"},{"html_id":"halite/Halite/Exception/UnRegisterMimeTypeError","path":"Halite/Exception/UnRegisterMimeTypeError.html","kind":"class","full_name":"Halite::Exception::UnRegisterMimeTypeError","name":"UnRegisterMimeTypeError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},"ancestors":[{"html_id":"halite/Halite/Exception/ResponseError","kind":"class","full_name":"Halite::Exception::ResponseError","name":"ResponseError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":46,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The MIME type(adapter) given was not understood","summary":"<p>The MIME type(adapter) given was not understood</p>"},{"html_id":"halite/Halite/Exception/UnsupportedMethodError","path":"Halite/Exception/UnsupportedMethodError.html","kind":"class","full_name":"Halite::Exception::UnsupportedMethodError","name":"UnsupportedMethodError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},"ancestors":[{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":19,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The method given was not understood","summary":"<p>The method given was not understood</p>"},{"html_id":"halite/Halite/Exception/UnsupportedSchemeError","path":"Halite/Exception/UnsupportedSchemeError.html","kind":"class","full_name":"Halite::Exception::UnsupportedSchemeError","name":"UnsupportedSchemeError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},"ancestors":[{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":22,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The scheme given was not understood","summary":"<p>The scheme given was not understood</p>"},{"html_id":"halite/Halite/Exception/UnsupportedStreamMethodError","path":"Halite/Exception/UnsupportedStreamMethodError.html","kind":"class","full_name":"Halite::Exception::UnsupportedStreamMethodError","name":"UnsupportedStreamMethodError","abstract":false,"superclass":{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},"ancestors":[{"html_id":"halite/Halite/Exception/RequestError","kind":"class","full_name":"Halite::Exception::RequestError","name":"RequestError"},{"html_id":"halite/Halite/Exception/Error","kind":"class","full_name":"Halite::Exception::Error","name":"Error"},{"html_id":"halite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/error.cr","line_number":25,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Exception","kind":"module","full_name":"Halite::Exception","name":"Exception"},"doc":"The head method can not streaming without empty response","summary":"<p>The head method can not streaming without empty response</p>"}]},{"html_id":"halite/Halite/Feature","path":"Halite/Feature.html","kind":"class","full_name":"Halite::Feature","name":"Feature","abstract":true,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/feature.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Cache","kind":"class","full_name":"Halite::Cache","name":"Cache"},{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"constructors":[{"html_id":"new(**options)-class-method","name":"new","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":3,"url":null},"def":{"name":"new","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(**options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"intercept(chain:Halite::Feature::Chain):Halite::Feature::Chain-instance-method","name":"intercept","doc":"Intercept and cooking request and response","summary":"<p>Intercept and cooking request and response</p>","abstract":false,"args":[{"name":"chain","external_name":"chain","restriction":"Halite::Feature::Chain"}],"args_string":"(chain : Halite::Feature::Chain) : Halite::Feature::Chain","args_html":"(chain : <a href=\"../Halite/Feature/Chain.html\">Halite::Feature::Chain</a>) : <a href=\"../Halite/Feature/Chain.html\">Halite::Feature::Chain</a>","location":{"filename":"src/halite/feature.cr","line_number":17,"url":null},"def":{"name":"intercept","args":[{"name":"chain","external_name":"chain","restriction":"Halite::Feature::Chain"}],"return_type":"Halite::Feature::Chain","visibility":"Public","body":"chain"}},{"html_id":"request(request:Halite::Request):Halite::Request-instance-method","name":"request","doc":"Cooks with request","summary":"<p>Cooks with request</p>","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"Halite::Request"}],"args_string":"(request : Halite::Request) : Halite::Request","args_html":"(request : <a href=\"../Halite/Request.html\">Halite::Request</a>) : <a href=\"../Halite/Request.html\">Halite::Request</a>","location":{"filename":"src/halite/feature.cr","line_number":7,"url":null},"def":{"name":"request","args":[{"name":"request","external_name":"request","restriction":"Halite::Request"}],"return_type":"Halite::Request","visibility":"Public","body":"request"}},{"html_id":"response(response:Halite::Response):Halite::Response-instance-method","name":"response","doc":"Cooking with response","summary":"<p>Cooking with response</p>","abstract":false,"args":[{"name":"response","external_name":"response","restriction":"Halite::Response"}],"args_string":"(response : Halite::Response) : Halite::Response","args_html":"(response : <a href=\"../Halite/Response.html\">Halite::Response</a>) : <a href=\"../Halite/Response.html\">Halite::Response</a>","location":{"filename":"src/halite/feature.cr","line_number":12,"url":null},"def":{"name":"response","args":[{"name":"response","external_name":"response","restriction":"Halite::Response"}],"return_type":"Halite::Response","visibility":"Public","body":"response"}}],"types":[{"html_id":"halite/Halite/Feature/Chain","path":"Halite/Feature/Chain.html","kind":"class","full_name":"Halite::Feature::Chain","name":"Chain","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/feature.cr","line_number":27,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Feature","kind":"class","full_name":"Halite::Feature","name":"Feature"},"doc":"Feature chain\n\nChain has two result:\n\nnext: perform and run next interceptor\nreturn: perform and return","summary":"<p>Feature chain</p>","constructors":[{"html_id":"new(request:Halite::Request,response:Halite::Response?,options:Halite::Options,&block:->Halite::Response)-class-method","name":"new","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response | ::Nil"},{"name":"options","external_name":"options","restriction":"Halite::Options"}],"args_string":"(request : Halite::Request, response : Halite::Response?, options : Halite::Options, &block :  -> Halite::Response)","args_html":"(request : <a href=\"../../Halite/Request.html\">Halite::Request</a>, response : <a href=\"../../Halite/Response.html\">Halite::Response</a>?, options : <a href=\"../../Halite/Options.html\">Halite::Options</a>, &block :  -> <a href=\"../../Halite/Response.html\">Halite::Response</a>)","location":{"filename":"src/halite/feature.cr","line_number":39,"url":null},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response | ::Nil"},{"name":"options","external_name":"options","restriction":"Halite::Options"}],"yields":0,"block_arg":{"name":"block","external_name":"block","restriction":"(-> Halite::Response)"},"visibility":"Public","body":"_ = allocate\n_.initialize(request, response, options, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"next(response)-instance-method","name":"next","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/feature.cr","line_number":45,"url":null},"def":{"name":"next","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"@result = Result::Next\n@response = response\nself\n"}},{"html_id":"perform-instance-method","name":"perform","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":63,"url":null},"def":{"name":"perform","visibility":"Public","body":"@performed_response || (@performed_response = @perform_request_block.call)\n@performed_response.not_nil!\n"}},{"html_id":"performed?-instance-method","name":"performed?","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":59,"url":null},"def":{"name":"performed?","visibility":"Public","body":"!@performed_response.nil?"}},{"html_id":"request:Halite::Request-instance-method","name":"request","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":33,"url":null},"def":{"name":"request","visibility":"Public","body":"@request"}},{"html_id":"request=(request)-instance-method","name":"request=","abstract":false,"args":[{"name":"request","external_name":"request","restriction":""}],"args_string":"(request)","args_html":"(request)","location":{"filename":"src/halite/feature.cr","line_number":33,"url":null},"def":{"name":"request=","args":[{"name":"request","external_name":"request","restriction":""}],"visibility":"Public","body":"@request = request"}},{"html_id":"response:Halite::Response?-instance-method","name":"response","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":34,"url":null},"def":{"name":"response","visibility":"Public","body":"@response"}},{"html_id":"result:Halite::Feature::Chain::Result-instance-method","name":"result","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":35,"url":null},"def":{"name":"result","visibility":"Public","body":"@result"}},{"html_id":"return(response)-instance-method","name":"return","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/feature.cr","line_number":52,"url":null},"def":{"name":"return","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"@result = Result::Return\n@response = response\nself\n"}}],"types":[{"html_id":"halite/Halite/Feature/Chain/Result","path":"Halite/Feature/Chain/Result.html","kind":"enum","full_name":"Halite::Feature::Chain::Result","name":"Result","abstract":false,"ancestors":[{"html_id":"halite/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"halite/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/feature.cr","line_number":28,"url":null}],"repository_name":"halite","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Next","name":"Next","value":"0"},{"id":"Return","name":"Return","value":"1"}],"namespace":{"html_id":"halite/Halite/Feature/Chain","kind":"class","full_name":"Halite::Feature::Chain","name":"Chain"},"instance_methods":[{"html_id":"next?-instance-method","name":"next?","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":29,"url":null},"def":{"name":"next?","visibility":"Public","body":"self == Next"}},{"html_id":"return?-instance-method","name":"return?","abstract":false,"location":{"filename":"src/halite/feature.cr","line_number":30,"url":null},"def":{"name":"return?","visibility":"Public","body":"self == Return"}}]}]}]},{"html_id":"halite/Halite/FeatureRegister","path":"Halite/FeatureRegister.html","kind":"module","full_name":"Halite::FeatureRegister","name":"FeatureRegister","abstract":false,"locations":[{"filename":"src/halite.cr","line_number":34,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"instance_methods":[{"html_id":"feature(name:String)-instance-method","name":"feature","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite.cr","line_number":39,"url":null},"def":{"name":"feature","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@features[name]"}},{"html_id":"feature?(name:String)-instance-method","name":"feature?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite.cr","line_number":43,"url":null},"def":{"name":"feature?","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@features[name]?"}},{"html_id":"has_feature?(name)-instance-method","name":"has_feature?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/halite.cr","line_number":47,"url":null},"def":{"name":"has_feature?","args":[{"name":"name","external_name":"name","restriction":""}],"visibility":"Public","body":"@@features.keys.includes?(name)"}},{"html_id":"register_feature(name:String,klass:Feature.class)-instance-method","name":"register_feature","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Feature.class"}],"args_string":"(name : String, klass : Feature.class)","args_html":"(name : String, klass : <span class=\"t\">Feature</span>.<span class=\"k\">class</span>)","location":{"filename":"src/halite.cr","line_number":35,"url":null},"def":{"name":"register_feature","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"klass","external_name":"klass","restriction":"Feature.class"}],"visibility":"Public","body":"@@features[name] = klass"}}]},{"html_id":"halite/Halite/FormData","path":"Halite/FormData.html","kind":"module","full_name":"Halite::FormData","name":"FormData","abstract":false,"locations":[{"filename":"src/halite/form_data.cr","line_number":20,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Utility-belt to build form data request bodies.\n\nProvides support for `application/x-www-form-urlencoded` and\n`multipart/form-data` types.\n\n```\nform = FormData.create({\n  \"name\"   => \"Lizeth Gusikowski\",\n  \"skill\"  => [\"ruby\", \"crystal\"],\n  \"avatar\" => File.open(\"avatar.png\"), # => \"image binary data\"\n})\n\nform.body    # => \"----------------------------_ytTht-0D5oif0cAGXSPjPSN\\r\\nContent-Disposition: form-data; name=\\\"name\\\"\\r\\n\\r\\nLizeth Gusikowski\\r\\n----------------------------_ytTht-0D5oif0cAGXSPjPSN\\r\\nContent-Disposition: form-data; name=\\\"skill\\\"\\r\\n\\r\\nruby\\r\\n----------------------------_ytTht-0D5oif0cAGXSPjPSN\\r\\nContent-Disposition: form-data; name=\\\"skill\\\"\\r\\n\\r\\ncrystal\\r\\n----------------------------_ytTht-0D5oif0cAGXSPjPSN\\r\\nContent-Disposition: form-data; name=\\\"avatar\\\"; filename=\\\"avatar.png\\\"\\r\\n\\r\\nimage binary data\\n\\r\\n----------------------------_ytTht-0D5oif0cAGXSPjPSN--\"\nform.headers # => HTTP::Headers{\"Content-Type\" => \"multipart/form-data; boundary=\\\"--------------------------SS0a9QKeM_6fcj2CE5D4d0LQ\\\"\"}\n```","summary":"<p>Utility-belt to build form data request bodies.</p>","class_methods":[{"html_id":"create(data:Hash(String,Halite::Options::Type)={}ofString=>Halite::Options::Type):Halite::Request::Data-class-method","name":"create","doc":"FormData factory. Automatically selects best type depending on given `data` Hash","summary":"<p>FormData factory.</p>","abstract":false,"args":[{"name":"data","default_value":"{} of String => Halite::Options::Type","external_name":"data","restriction":"Hash(String, Halite::Options::Type)"}],"args_string":"(data : Hash(String, Halite::Options::Type) = {} of String => Halite::Options::Type) : Halite::Request::Data","args_html":"(data : Hash(String, <a href=\"../Halite/Options/Type.html\">Halite::Options::Type</a>) = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Options</span><span class=\"t\">::</span><span class=\"t\">Type</span>) : <a href=\"../Halite/Request/Data.html\">Halite::Request::Data</a>","location":{"filename":"src/halite/form_data.cr","line_number":22,"url":null},"def":{"name":"create","args":[{"name":"data","default_value":"{} of String => Halite::Options::Type","external_name":"data","restriction":"Hash(String, Halite::Options::Type)"}],"return_type":"Halite::Request::Data","visibility":"Public","body":"if multipart?(data)\n  io = IO::Memory.new\n  builder = HTTP::FormData::Builder.new(io)\n  data.each do |k, v|\n    case v\n    when File\n      builder.file(k, v.as(IO), HTTP::FormData::FileMetadata.new(filename: File.basename(v.path)))\n    when Array\n      v.each do |e|\n        case e\n        when File\n          builder.file(k, e.as(IO), HTTP::FormData::FileMetadata.new(filename: File.basename(e.path)))\n        else\n          builder.field(k, e.to_s)\n        end\n      end\n    else\n      builder.field(k, v.to_s)\n    end\n  end\n  builder.finish\n  Halite::Request::Data.new(io.to_s, builder.content_type)\nelse\n  body = HTTP::Params.encode(data)\n  Halite::Request::Data.new(body, \"application/x-www-form-urlencoded\")\nend"}}]},{"html_id":"halite/Halite/HeaderLink","path":"Halite/HeaderLink.html","kind":"struct","full_name":"Halite::HeaderLink","name":"HeaderLink","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/header_link.cr","line_number":5,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"HeaderLink\n\nref: [https://tools.ietf.org/html/rfc5988](https://tools.ietf.org/html/rfc5988)","summary":"<p>HeaderLink</p>","class_methods":[{"html_id":"parse(raw:String,uri:URI?=nil):Hash(String,Halite::HeaderLink)-class-method","name":"parse","doc":"Header link parser","summary":"<p>Header link parser</p>","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"URI | ::Nil"}],"args_string":"(raw : String, uri : URI? = nil) : Hash(String, Halite::HeaderLink)","args_html":"(raw : String, uri : URI? = <span class=\"n\">nil</span>) : Hash(String, <a href=\"../Halite/HeaderLink.html\">Halite::HeaderLink</a>)","location":{"filename":"src/halite/header_link.cr","line_number":7,"url":null},"def":{"name":"parse","args":[{"name":"raw","external_name":"raw","restriction":"String"},{"name":"uri","default_value":"nil","external_name":"uri","restriction":"URI | ::Nil"}],"return_type":"Hash(String, Halite::HeaderLink)","visibility":"Public","body":"links = {} of String => HeaderLink\n(raw.split(/,\\s*</)).each do |rel|\n  head_link = parse_link(rel, uri)\n  links[head_link.rel] = head_link\nend\nlinks\n"}}],"constructors":[{"html_id":"new(rel:String,target:String,params:Hash(String,String))-class-method","name":"new","abstract":false,"args":[{"name":"rel","external_name":"rel","restriction":"String"},{"name":"target","external_name":"target","restriction":"String"},{"name":"params","external_name":"params","restriction":"Hash(String, String)"}],"args_string":"(rel : String, target : String, params : Hash(String, String))","args_html":"(rel : String, target : String, params : Hash(String, String))","location":{"filename":"src/halite/header_link.cr","line_number":52,"url":null},"def":{"name":"new","args":[{"name":"rel","external_name":"rel","restriction":"String"},{"name":"target","external_name":"target","restriction":"String"},{"name":"params","external_name":"params","restriction":"Hash(String, String)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(rel, target, params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"params:Hash(String,String)-instance-method","name":"params","abstract":false,"location":{"filename":"src/halite/header_link.cr","line_number":50,"url":null},"def":{"name":"params","visibility":"Public","body":"@params"}},{"html_id":"rel:String-instance-method","name":"rel","abstract":false,"location":{"filename":"src/halite/header_link.cr","line_number":50,"url":null},"def":{"name":"rel","visibility":"Public","body":"@rel"}},{"html_id":"target:String-instance-method","name":"target","abstract":false,"location":{"filename":"src/halite/header_link.cr","line_number":50,"url":null},"def":{"name":"target","visibility":"Public","body":"@target"}},{"html_id":"to_s(io)-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/halite/header_link.cr","line_number":55,"url":null},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"io << target"}}]},{"html_id":"halite/Halite/Helper","path":"Halite/Helper.html","kind":"module","full_name":"Halite::Helper","name":"Helper","abstract":false,"locations":[{"filename":"src/halite.cr","line_number":9,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"class_methods":[{"html_id":"to_rfc3339(time:Time,io:IO,*,timezone=ENV[\"TZ\"]?,fraction_digits:Int=0)-class-method","name":"to_rfc3339","doc":"Parses a `Time` into a [RFC 3339](https://tools.ietf.org/html/rfc3339) datetime format string to `IO`\n([ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf) profile).\n\n> Load Enviroment named \"TZ\" as high priority","summary":"<p>Parses a <code>Time</code> into a <a href=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> datetime format string to <code>IO</code> (<a href=\"http://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO 8601</a> profile).</p>","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"timezone","default_value":"ENV[\"TZ\"]?","external_name":"timezone","restriction":""},{"name":"fraction_digits","default_value":"0","external_name":"fraction_digits","restriction":"Int"}],"args_string":"(time : Time, io : IO, *, timezone = ENV[\"TZ\"]?, fraction_digits : Int = 0)","args_html":"(time : Time, io : IO, *, timezone = <span class=\"t\">ENV</span>[<span class=\"s\">&quot;TZ&quot;</span>]?, fraction_digits : Int = <span class=\"n\">0</span>)","location":{"filename":"src/halite.cr","line_number":22,"url":null},"def":{"name":"to_rfc3339","args":[{"name":"time","external_name":"time","restriction":"Time"},{"name":"io","external_name":"io","restriction":"IO"},{"name":"","external_name":"","restriction":""},{"name":"timezone","default_value":"ENV[\"TZ\"]?","external_name":"timezone","restriction":""},{"name":"fraction_digits","default_value":"0","external_name":"fraction_digits","restriction":"Int"}],"splat_index":2,"visibility":"Public","body":"Time::Format::RFC_3339.format(time.in(configure_location(timezone)), io, fraction_digits)"}},{"html_id":"to_rfc3339(time:Time,*,timezone=ENV[\"TZ\"]?,fraction_digits:Int=0)-class-method","name":"to_rfc3339","doc":"Parses a `Time` into a [RFC 3339](https://tools.ietf.org/html/rfc3339) datetime format string\n([ISO 8601](http://xml.coverpages.org/ISO-FDIS-8601.pdf) profile).\n\n> Load Enviroment named \"TZ\" as high priority","summary":"<p>Parses a <code>Time</code> into a <a href=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> datetime format string (<a href=\"http://xml.coverpages.org/ISO-FDIS-8601.pdf\">ISO 8601</a> profile).</p>","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"},{"name":"","external_name":"","restriction":""},{"name":"timezone","default_value":"ENV[\"TZ\"]?","external_name":"timezone","restriction":""},{"name":"fraction_digits","default_value":"0","external_name":"fraction_digits","restriction":"Int"}],"args_string":"(time : Time, *, timezone = ENV[\"TZ\"]?, fraction_digits : Int = 0)","args_html":"(time : Time, *, timezone = <span class=\"t\">ENV</span>[<span class=\"s\">&quot;TZ&quot;</span>]?, fraction_digits : Int = <span class=\"n\">0</span>)","location":{"filename":"src/halite.cr","line_number":14,"url":null},"def":{"name":"to_rfc3339","args":[{"name":"time","external_name":"time","restriction":"Time"},{"name":"","external_name":"","restriction":""},{"name":"timezone","default_value":"ENV[\"TZ\"]?","external_name":"timezone","restriction":""},{"name":"fraction_digits","default_value":"0","external_name":"fraction_digits","restriction":"Int"}],"splat_index":1,"visibility":"Public","body":"Time::Format::RFC_3339.format(time.in(configure_location(timezone)), fraction_digits: fraction_digits)"}}]},{"html_id":"halite/Halite/Logging","path":"Halite/Logging.html","kind":"class","full_name":"Halite::Logging","name":"Logging","abstract":false,"superclass":{"html_id":"halite/Halite/Feature","kind":"class","full_name":"Halite::Feature","name":"Feature"},"ancestors":[{"html_id":"halite/Halite/Feature","kind":"class","full_name":"Halite::Feature","name":"Feature"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/logging.cr","line_number":12,"url":null},{"filename":"src/halite/features/logging/common.cr","line_number":1,"url":null},{"filename":"src/halite/features/logging/json.cr","line_number":3,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_LOGGER","name":"DEFAULT_LOGGER","value":"Logging::Common.new"}],"extended_modules":[{"html_id":"halite/Halite/Logging/Register","kind":"module","full_name":"Halite::Logging::Register","name":"Register"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Logging feature","summary":"<p>Logging feature</p>","constructors":[{"html_id":"new(**options)-class-method","name":"new","doc":"return a new Cache instance\n\nAccepts argument:\n\n- **logging**: `Logging::Abstract`","summary":"<p>return a new Cache instance</p>","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":22,"url":null},"def":{"name":"new","double_splat":{"name":"options","external_name":"options","restriction":""},"visibility":"Public","body":"_ = allocate\n_.initialize(**options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"request(request)-instance-method","name":"request","abstract":false,"args":[{"name":"request","external_name":"request","restriction":""}],"args_string":"(request)","args_html":"(request)","location":{"filename":"src/halite/features/logging.cr","line_number":26,"url":null},"def":{"name":"request","args":[{"name":"request","external_name":"request","restriction":""}],"visibility":"Public","body":"@writer.request(request)\nrequest\n"}},{"html_id":"response(response)-instance-method","name":"response","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/features/logging.cr","line_number":31,"url":null},"def":{"name":"response","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"@writer.response(response)\nresponse\n"}},{"html_id":"writer:Logging::Abstract-instance-method","name":"writer","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":15,"url":null},"def":{"name":"writer","return_type":"Logging::Abstract","visibility":"Public","body":"@writer"}}],"types":[{"html_id":"halite/Halite/Logging/Abstract","path":"Halite/Logging/Abstract.html","kind":"class","full_name":"Halite::Logging::Abstract","name":"Abstract","abstract":true,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/logging.cr","line_number":37,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/Logging/Common","kind":"class","full_name":"Halite::Logging::Common","name":"Common"},{"html_id":"halite/Halite/Logging/JSON","kind":"class","full_name":"Halite::Logging::JSON","name":"JSON"}],"namespace":{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"},"doc":"Logging format Abstract","summary":"<p>Logging format Abstract</p>","constructors":[{"html_id":"new(*,for:String=\"halite\",skip_request_body=false,skip_response_body=false,skip_benchmark=false,colorize=true)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"for","default_value":"\"halite\"","external_name":"for","restriction":"String"},{"name":"skip_request_body","default_value":"false","external_name":"skip_request_body","restriction":""},{"name":"skip_response_body","default_value":"false","external_name":"skip_response_body","restriction":""},{"name":"skip_benchmark","default_value":"false","external_name":"skip_benchmark","restriction":""},{"name":"colorize","default_value":"true","external_name":"colorize","restriction":""}],"args_string":"(*, for : String = \"halite\", skip_request_body = false, skip_response_body = false, skip_benchmark = false, colorize = true)","args_html":"(*, for : String = <span class=\"s\">&quot;halite&quot;</span>, skip_request_body = <span class=\"n\">false</span>, skip_response_body = <span class=\"n\">false</span>, skip_benchmark = <span class=\"n\">false</span>, colorize = <span class=\"n\">true</span>)","location":{"filename":"src/halite/features/logging.cr","line_number":46,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"for","default_value":"\"halite\"","external_name":"for","restriction":"String"},{"name":"skip_request_body","default_value":"false","external_name":"skip_request_body","restriction":""},{"name":"skip_response_body","default_value":"false","external_name":"skip_response_body","restriction":""},{"name":"skip_benchmark","default_value":"false","external_name":"skip_benchmark","restriction":""},{"name":"colorize","default_value":"true","external_name":"colorize","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(for: for, skip_request_body: skip_request_body, skip_response_body: skip_response_body, skip_benchmark: skip_benchmark, colorize: colorize)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"colorize:Bool-instance-method","name":"colorize","doc":"Turns `self` into a `Colorize::Object`.","summary":"<p>Turns <code>self</code> into a <code>Colorize::Object</code>.</p>","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":42,"url":null},"def":{"name":"colorize","return_type":"Bool","visibility":"Public","body":"@colorize"}},{"html_id":"logger=(logger:Log)-instance-method","name":"logger=","abstract":false,"args":[{"name":"logger","external_name":"logger","restriction":"Log"}],"args_string":"(logger : Log)","args_html":"(logger : Log)","location":{"filename":"src/halite/features/logging.cr","line_number":38,"url":null},"def":{"name":"logger=","args":[{"name":"logger","external_name":"logger","restriction":"Log"}],"visibility":"Public","body":"@logger = logger"}},{"html_id":"request(request)-instance-method","name":"request","abstract":true,"args":[{"name":"request","external_name":"request","restriction":""}],"args_string":"(request)","args_html":"(request)","location":{"filename":"src/halite/features/logging.cr","line_number":53,"url":null},"def":{"name":"request","args":[{"name":"request","external_name":"request","restriction":""}],"visibility":"Public","body":""}},{"html_id":"response(response)-instance-method","name":"response","abstract":true,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/features/logging.cr","line_number":54,"url":null},"def":{"name":"response","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":""}},{"html_id":"skip_benchmark:Bool-instance-method","name":"skip_benchmark","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":41,"url":null},"def":{"name":"skip_benchmark","return_type":"Bool","visibility":"Public","body":"@skip_benchmark"}},{"html_id":"skip_request_body:Bool-instance-method","name":"skip_request_body","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":39,"url":null},"def":{"name":"skip_request_body","return_type":"Bool","visibility":"Public","body":"@skip_request_body"}},{"html_id":"skip_response_body:Bool-instance-method","name":"skip_response_body","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":40,"url":null},"def":{"name":"skip_response_body","return_type":"Bool","visibility":"Public","body":"@skip_response_body"}}]},{"html_id":"halite/Halite/Logging/Common","path":"Halite/Logging/Common.html","kind":"class","full_name":"Halite::Logging::Common","name":"Common","abstract":false,"superclass":{"html_id":"halite/Halite/Logging/Abstract","kind":"class","full_name":"Halite::Logging::Abstract","name":"Abstract"},"ancestors":[{"html_id":"halite/Halite/Logging/Abstract","kind":"class","full_name":"Halite::Logging::Abstract","name":"Abstract"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/logging/common.cr","line_number":17,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"},"doc":"Common logging format\n\nInstance variables to check `Halite::Logging::Abstract`\n\n```\nHalite.use(\"logging\", logging: Halite::Logging::Common.new(skip_request_body: true))\n  .get(\"http://httpbin.org/get\")\n\n# Or\nHalite.logging(format: \"common\", skip_request_body: true)\n  .get(\"http://httpbin.org/get\")\n\n# => 2018-08-31 16:56:12 +08:00 | request  | GET    | http://httpbin.org/get\n# => 2018-08-31 16:56:13 +08:00 | response | 200    | http://httpbin.org/get | 1.08s | application/json\n```","summary":"<p>Common logging format</p>","instance_methods":[{"html_id":"request(request)-instance-method","name":"request","abstract":false,"args":[{"name":"request","external_name":"request","restriction":""}],"args_string":"(request)","args_html":"(request)","location":{"filename":"src/halite/features/logging/common.cr","line_number":18,"url":null},"def":{"name":"request","args":[{"name":"request","external_name":"request","restriction":""}],"visibility":"Public","body":"message = String.build do |io|\n  (io << \"> | request  | \") << (colorful_method(request.verb))\n  (io << \"| \") << request.uri\n  if request.body.empty? || @skip_request_body\n  else\n    (io << \"\\n\") << request.body\n  end\nend\n@logger.info do\n  message\nend\nif @skip_benchmark\nelse\n  @request_time = Time.utc\nend\n"}},{"html_id":"response(response)-instance-method","name":"response","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/features/logging/common.cr","line_number":31,"url":null},"def":{"name":"response","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"message = String.build do |io|\n  content_type = response.content_type || \"Unknown MIME\"\n  (io << \"< | response | \") << (colorful_status_code(response.status_code))\n  (io << \"| \") << response.uri\n  if (!@skip_benchmark) && (request_time = @request_time)\n    elapsed = Time.utc - request_time\n    (io << \" | \") << (human_time(elapsed))\n  end\n  (io << \" | \") << content_type\n  if (response.body.empty? || (binary_type?(content_type))) || @skip_response_body\n  else\n    (io << \"\\n\") << response.body\n  end\nend\n@logger.info do\n  message\nend\n"}}]},{"html_id":"halite/Halite/Logging/JSON","path":"Halite/Logging/JSON.html","kind":"class","full_name":"Halite::Logging::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"halite/Halite/Logging/Abstract","kind":"class","full_name":"Halite::Logging::Abstract","name":"Abstract"},"ancestors":[{"html_id":"halite/Halite/Logging/Abstract","kind":"class","full_name":"Halite::Logging::Abstract","name":"Abstract"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/logging/json.cr","line_number":42,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"},"doc":"JSON logging format\n\nInstance variables to check `Halite::Logging::Abstract`.\n\nIn JSON format, if you set skip some key, it will return `false`.\n\n```\nHalite.use(\"logging\", logging: Halite::Logging::JSON.new(skip_request_body: true))\n  .get(\"http://httpbin.org/get\")\n\n# Or\nHalite.logging(format: \"json\", skip_request_body: true)\n  .get(\"http://httpbin.org/get\")\n```\n\nLog will look like:\n\n```\n{\n  \"created_at\": \"2018-08-31T16:53:57+08:00:00\",\n  \"entry\":      {\n    \"request\": {\n      \"body\":      \"\",\n      \"headers\":   {...},\n      \"method\":    \"GET\",\n      \"url\":       \"http://httpbin.org/anything\",\n      \"timestamp\": \"2018-08-31T16:53:59+08:00:00\",\n    },\n    \"response\": {\n      \"body\":         false,\n      \"header\":       {...},\n      \"status_code\":  200,\n      \"http_version\": \"HTTP/1.1\",\n      \"timestamp\":    \"2018-08-31T16:53:59+08:00:00\",\n    },\n  },\n}\n```","summary":"<p>JSON logging format</p>","instance_methods":[{"html_id":"request(request)-instance-method","name":"request","abstract":false,"args":[{"name":"request","external_name":"request","restriction":""}],"args_string":"(request)","args_html":"(request)","location":{"filename":"src/halite/features/logging/json.cr","line_number":46,"url":null},"def":{"name":"request","args":[{"name":"request","external_name":"request","restriction":""}],"visibility":"Public","body":"@request_time = Time.utc\n@request = Request.new(request, @skip_request_body)\n"}},{"html_id":"response(response)-instance-method","name":"response","abstract":false,"args":[{"name":"response","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/halite/features/logging/json.cr","line_number":51,"url":null},"def":{"name":"response","args":[{"name":"response","external_name":"response","restriction":""}],"visibility":"Public","body":"@response = Response.new(response, @skip_response_body)\n@logger.info do\n  raw\nend\n"}}]},{"html_id":"halite/Halite/Logging/Register","path":"Halite/Logging/Register.html","kind":"module","full_name":"Halite::Logging::Register","name":"Register","abstract":false,"locations":[{"filename":"src/halite/features/logging.cr","line_number":80,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"},"doc":"Logging format register","summary":"<p>Logging format register</p>","instance_methods":[{"html_id":"[](name:String)-instance-method","name":"[]","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite/features/logging.cr","line_number":85,"url":null},"def":{"name":"[]","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@formats[name]"}},{"html_id":"[]?(name:String)-instance-method","name":"[]?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite/features/logging.cr","line_number":89,"url":null},"def":{"name":"[]?","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@formats[name]?"}},{"html_id":"availables-instance-method","name":"availables","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":93,"url":null},"def":{"name":"availables","visibility":"Public","body":"@@formats.keys"}},{"html_id":"register(name:String,format:Abstract.class)-instance-method","name":"register","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"format","external_name":"format","restriction":"Abstract.class"}],"args_string":"(name : String, format : Abstract.class)","args_html":"(name : String, format : <span class=\"t\">Abstract</span>.<span class=\"k\">class</span>)","location":{"filename":"src/halite/features/logging.cr","line_number":81,"url":null},"def":{"name":"register","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"format","external_name":"format","restriction":"Abstract.class"}],"visibility":"Public","body":"@@formats[name] = format"}}]},{"html_id":"halite/Halite/Logging/ShortFormat","path":"Halite/Logging/ShortFormat.html","kind":"struct","full_name":"Halite::Logging::ShortFormat","name":"ShortFormat","abstract":false,"superclass":{"html_id":"halite/Log/StaticFormatter","kind":"struct","full_name":"Log::StaticFormatter","name":"StaticFormatter"},"ancestors":[{"html_id":"halite/Log/StaticFormatter","kind":"struct","full_name":"Log::StaticFormatter","name":"StaticFormatter"},{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/features/logging.cr","line_number":103,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Logging","kind":"class","full_name":"Halite::Logging","name":"Logging"},"doc":"Similar to `Log::ShortFormat`\n\n**NOTE**: It invalid by calling `Log.setup` or `Log.setup_from_env` outside of Halite.\n\nCopy from https://github.com/crystal-lang/crystal/blob/3c48f311f/src/log/format.cr#L197","summary":"<p>Similar to <code>Log::ShortFormat</code></p>","instance_methods":[{"html_id":"run-instance-method","name":"run","doc":"Subclasses must implement this method to define the output pattern","summary":"<p>Subclasses must implement this method to define the output pattern</p>","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":104,"url":null},"def":{"name":"run","visibility":"Public","body":"\"#{timestamp} - #{source(before: \" \", after: \": \")}#{message}#{data(before: \" -- \")}#{context(before: \" -- \")}#{exception}\""}},{"html_id":"timestamp-instance-method","name":"timestamp","doc":"Write the entry timestamp in RFC3339 format","summary":"<p>Write the entry timestamp in RFC3339 format</p>","abstract":false,"location":{"filename":"src/halite/features/logging.cr","line_number":109,"url":null},"def":{"name":"timestamp","visibility":"Public","body":"Helper.to_rfc3339(@entry.timestamp, @io)"}}]}]},{"html_id":"halite/Halite/MimeType","path":"Halite/MimeType.html","kind":"module","full_name":"Halite::MimeType","name":"MimeType","abstract":false,"locations":[{"filename":"src/halite/mime_type.cr","line_number":2,"url":null},{"filename":"src/halite/mime_types/json.cr","line_number":3,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"class_methods":[{"html_id":"[](name:String)-class-method","name":"[]","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite/mime_type.cr","line_number":14,"url":null},"def":{"name":"[]","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@adapters[normalize(name)]"}},{"html_id":"[]?(name:String)-class-method","name":"[]?","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/halite/mime_type.cr","line_number":18,"url":null},"def":{"name":"[]?","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@@adapters[normalize(name)]?"}},{"html_id":"register(adapter:MimeType::Adapter,name:String,*shortcuts)-class-method","name":"register","abstract":false,"args":[{"name":"adapter","external_name":"adapter","restriction":"MimeType::Adapter"},{"name":"name","external_name":"name","restriction":"String"},{"name":"shortcuts","external_name":"shortcuts","restriction":""}],"args_string":"(adapter : MimeType::Adapter, name : String, *shortcuts)","args_html":"(adapter : <a href=\"../Halite/MimeType/Adapter.html\">MimeType::Adapter</a>, name : String, *shortcuts)","location":{"filename":"src/halite/mime_type.cr","line_number":6,"url":null},"def":{"name":"register","args":[{"name":"adapter","external_name":"adapter","restriction":"MimeType::Adapter"},{"name":"name","external_name":"name","restriction":"String"},{"name":"shortcuts","external_name":"shortcuts","restriction":""}],"splat_index":2,"visibility":"Public","body":"@@adapters[name] = adapter\nif shortcuts.empty?\nelse\n  shortcuts.each do |shortcut|\n    if shortcut.is_a?(String)\n    else\n      next\n    end\n    @@aliases[shortcut] = name\n  end\nend\n"}}],"types":[{"html_id":"halite/Halite/MimeType/Adapter","path":"Halite/MimeType/Adapter.html","kind":"class","full_name":"Halite::MimeType::Adapter","name":"Adapter","abstract":true,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/mime_type.cr","line_number":26,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"halite/Halite/MimeType/JSON","kind":"class","full_name":"Halite::MimeType::JSON","name":"JSON"}],"namespace":{"html_id":"halite/Halite/MimeType","kind":"module","full_name":"Halite::MimeType","name":"MimeType"},"instance_methods":[{"html_id":"decode(string)-instance-method","name":"decode","abstract":true,"args":[{"name":"string","external_name":"string","restriction":""}],"args_string":"(string)","args_html":"(string)","location":{"filename":"src/halite/mime_type.cr","line_number":28,"url":null},"def":{"name":"decode","args":[{"name":"string","external_name":"string","restriction":""}],"visibility":"Public","body":""}},{"html_id":"encode(obj)-instance-method","name":"encode","abstract":true,"args":[{"name":"obj","external_name":"obj","restriction":""}],"args_string":"(obj)","args_html":"(obj)","location":{"filename":"src/halite/mime_type.cr","line_number":27,"url":null},"def":{"name":"encode","args":[{"name":"obj","external_name":"obj","restriction":""}],"visibility":"Public","body":""}}]},{"html_id":"halite/Halite/MimeType/JSON","path":"Halite/MimeType/JSON.html","kind":"class","full_name":"Halite::MimeType::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"halite/Halite/MimeType/Adapter","kind":"class","full_name":"Halite::MimeType::Adapter","name":"Adapter"},"ancestors":[{"html_id":"halite/Halite/MimeType/Adapter","kind":"class","full_name":"Halite::MimeType::Adapter","name":"Adapter"},{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/mime_types/json.cr","line_number":4,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/MimeType","kind":"module","full_name":"Halite::MimeType","name":"MimeType"},"instance_methods":[{"html_id":"decode(str)-instance-method","name":"decode","abstract":false,"args":[{"name":"str","external_name":"str","restriction":""}],"args_string":"(str)","args_html":"(str)","location":{"filename":"src/halite/mime_types/json.cr","line_number":9,"url":null},"def":{"name":"decode","args":[{"name":"str","external_name":"str","restriction":""}],"visibility":"Public","body":"::JSON.parse(str)"}},{"html_id":"encode(obj)-instance-method","name":"encode","abstract":false,"args":[{"name":"obj","external_name":"obj","restriction":""}],"args_string":"(obj)","args_html":"(obj)","location":{"filename":"src/halite/mime_types/json.cr","line_number":5,"url":null},"def":{"name":"encode","args":[{"name":"obj","external_name":"obj","restriction":""}],"visibility":"Public","body":"obj.to_json"}}]}]},{"html_id":"halite/Halite/Options","path":"Halite/Options.html","kind":"class","full_name":"Halite::Options","name":"Options","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/options.cr","line_number":40,"url":null},{"filename":"src/halite/options/follow.cr","line_number":2,"url":null},{"filename":"src/halite/options/timeout.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Options class\n\n### Init with splats options\n\n```\no = Options.new(\n  headers: {\n    user_agent: \"foobar\"\n  }\n}\no.headers.class # => HTTP::Headers\no.cookies.class # => HTTP::Cookies\n```\n\n### Set/Get timeout\n\nSet it with `connect_timeout`/`read_timeout`/`write_timeout` keys,\nbut get it call `Timeout` class.\n\n```\no = Options.new(connect_timeout: 30, read_timeout: 30)\no.timeout.connect # => 30.0\no.timeout.read    # => 30.0\no.timeout.write   # => nil\n```\n\n### Set/Get follow\n\nSet it with `follow`/`follow_strict` keys, but get it call `Follow` class.\n\n```\no = Options.new(follow: 3, follow_strict: false)\no.follow.hops   # => 3\no.follow.strict # => false\n```","summary":"<p>Options class</p>","constructors":[{"html_id":"new(options:Halite::Options)-class-method","name":"new","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Halite::Options"}],"args_string":"(options : Halite::Options)","args_html":"(options : <a href=\"../Halite/Options.html\">Halite::Options</a>)","location":{"filename":"src/halite/options.cr","line_number":41,"url":null},"def":{"name":"new","args":[{"name":"options","external_name":"options","restriction":"Halite::Options"}],"visibility":"Public","body":"options.is_a?(self) ? options : super(options)"}},{"html_id":"new(endpoint:String|URI?=nil,headers:Hash(String,_)|NamedTuple?=nil,cookies:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,connect_timeout:Int32|Float64|Time::Span?=nil,read_timeout:Int32|Float64|Time::Span?=nil,write_timeout:Int32|Float64|Time::Span?=nil,follow:Int32?=nil,follow_strict:Bool?=nil,tls:OpenSSL::SSL::Context::Client?=nil,features={}ofString=>Feature)-class-method","name":"new","abstract":false,"args":[{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"connect_timeout","default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read_timeout","default_value":"nil","external_name":"read_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write_timeout","default_value":"nil","external_name":"write_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"follow","default_value":"nil","external_name":"follow","restriction":"Int32 | ::Nil"},{"name":"follow_strict","default_value":"nil","external_name":"follow_strict","restriction":"Bool | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"args_string":"(endpoint : String | URI? = nil, headers : Hash(String, _) | NamedTuple? = nil, cookies : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, connect_timeout : Int32 | Float64 | Time::Span? = nil, read_timeout : Int32 | Float64 | Time::Span? = nil, write_timeout : Int32 | Float64 | Time::Span? = nil, follow : Int32? = nil, follow_strict : Bool? = nil, tls : OpenSSL::SSL::Context::Client? = nil, features = {} of String => Feature)","args_html":"(endpoint : String | URI? = <span class=\"n\">nil</span>, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, cookies : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, connect_timeout : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, read_timeout : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, write_timeout : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, follow : Int32? = <span class=\"n\">nil</span>, follow_strict : Bool? = <span class=\"n\">nil</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, features = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">Feature</span>)","location":{"filename":"src/halite/options.cr","line_number":45,"url":null},"def":{"name":"new","args":[{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"connect_timeout","default_value":"nil","external_name":"connect_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read_timeout","default_value":"nil","external_name":"read_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write_timeout","default_value":"nil","external_name":"write_timeout","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"follow","default_value":"nil","external_name":"follow","restriction":"Int32 | ::Nil"},{"name":"follow_strict","default_value":"nil","external_name":"follow_strict","restriction":"Bool | ::Nil"},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"visibility":"Public","body":"new(endpoint: endpoint, headers: headers, cookies: cookies, params: params, form: form, json: json, raw: raw, timeout: Timeout.new(connect: connect_timeout, read: read_timeout, write: write_timeout), follow: Follow.new(hops: follow, strict: follow_strict), tls: tls, features: features)"}},{"html_id":"new(*,endpoint:String|URI?=nil,headers:Hash(String,_)|NamedTuple?=nil,cookies:Hash(String,_)|NamedTuple?=nil,params:Hash(String,_)|NamedTuple?=nil,form:Hash(String,_)|NamedTuple?=nil,json:Hash(String,_)|NamedTuple?=nil,raw:String?=nil,timeout=Timeout.new,follow=Follow.new,tls:OpenSSL::SSL::Context::Client?=nil,features={}ofString=>Feature)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"args_string":"(*, endpoint : String | URI? = nil, headers : Hash(String, _) | NamedTuple? = nil, cookies : Hash(String, _) | NamedTuple? = nil, params : Hash(String, _) | NamedTuple? = nil, form : Hash(String, _) | NamedTuple? = nil, json : Hash(String, _) | NamedTuple? = nil, raw : String? = nil, timeout = Timeout.new, follow = Follow.new, tls : OpenSSL::SSL::Context::Client? = nil, features = {} of String => Feature)","args_html":"(*, endpoint : String | URI? = <span class=\"n\">nil</span>, headers : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, cookies : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, params : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, form : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, json : Hash(String, _) | NamedTuple? = <span class=\"n\">nil</span>, raw : String? = <span class=\"n\">nil</span>, timeout = <span class=\"t\">Timeout</span>.<span class=\"k\">new</span>, follow = <span class=\"t\">Follow</span>.<span class=\"k\">new</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, features = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">Feature</span>)","location":{"filename":"src/halite/options.cr","line_number":91,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","default_value":"nil","external_name":"endpoint","restriction":"String | URI | ::Nil"},{"name":"headers","default_value":"nil","external_name":"headers","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"cookies","default_value":"nil","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"params","default_value":"nil","external_name":"params","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"form","default_value":"nil","external_name":"form","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"json","default_value":"nil","external_name":"json","restriction":"Hash(String, _) | NamedTuple | ::Nil"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(endpoint: endpoint, headers: headers, cookies: cookies, params: params, form: form, json: json, raw: raw, timeout: timeout, follow: follow, tls: tls, features: features)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(*,endpoint:URI?,headers:HTTP::Headers,cookies:HTTP::Cookies,params:Hash(String,Type),form:Hash(String,Type),json:Hash(String,Type),raw:String?=nil,timeout=Timeout.new,follow=Follow.new,tls:OpenSSL::SSL::Context::Client?=nil,features={}ofString=>Feature)-class-method","name":"new","abstract":false,"args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":"URI | ::Nil"},{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"},{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"},{"name":"params","external_name":"params","restriction":"Hash(String, Type)"},{"name":"form","external_name":"form","restriction":"Hash(String, Type)"},{"name":"json","external_name":"json","restriction":"Hash(String, Type)"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"args_string":"(*, endpoint : URI?, headers : HTTP::Headers, cookies : HTTP::Cookies, params : Hash(String, Type), form : Hash(String, Type), json : Hash(String, Type), raw : String? = nil, timeout = Timeout.new, follow = Follow.new, tls : OpenSSL::SSL::Context::Client? = nil, features = {} of String => Feature)","args_html":"(*, endpoint : URI?, headers : <a href=\"../HTTP/Headers.html\">HTTP::Headers</a>, cookies : HTTP::Cookies, params : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>), form : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>), json : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>), raw : String? = <span class=\"n\">nil</span>, timeout = <span class=\"t\">Timeout</span>.<span class=\"k\">new</span>, follow = <span class=\"t\">Follow</span>.<span class=\"k\">new</span>, tls : OpenSSL::SSL::Context::Client? = <span class=\"n\">nil</span>, features = {} <span class=\"k\">of</span> <span class=\"t\">String</span> =&gt; <span class=\"t\">Feature</span>)","location":{"filename":"src/halite/options.cr","line_number":111,"url":null},"def":{"name":"new","args":[{"name":"","external_name":"","restriction":""},{"name":"endpoint","external_name":"endpoint","restriction":"URI | ::Nil"},{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"},{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"},{"name":"params","external_name":"params","restriction":"Hash(String, Type)"},{"name":"form","external_name":"form","restriction":"Hash(String, Type)"},{"name":"json","external_name":"json","restriction":"Hash(String, Type)"},{"name":"raw","default_value":"nil","external_name":"raw","restriction":"String | ::Nil"},{"name":"timeout","default_value":"Timeout.new","external_name":"timeout","restriction":""},{"name":"follow","default_value":"Follow.new","external_name":"follow","restriction":""},{"name":"tls","default_value":"nil","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"},{"name":"features","default_value":"{} of String => Feature","external_name":"features","restriction":""}],"splat_index":0,"visibility":"Public","body":"_ = allocate\n_.initialize(endpoint: endpoint, headers: headers, cookies: cookies, params: params, form: form, json: json, raw: raw, timeout: timeout, follow: follow, tls: tls, features: features)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clear!:Halite::Options-instance-method","name":"clear!","doc":"Reset options","summary":"<p>Reset options</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":345,"url":null},"def":{"name":"clear!","return_type":"Halite::Options","visibility":"Public","body":"@endpoint = nil\n@headers = HTTP::Headers.new\n@cookies = HTTP::Cookies.new\n@params = {} of String => Type\n@form = {} of String => Type\n@json = {} of String => Type\n@raw = nil\n@timeout = Timeout.new\n@follow = Follow.new\n@features = {} of String => Feature\n@tls = nil\nself\n"}},{"html_id":"connect_timeout-instance-method","name":"connect_timeout","doc":"Alias `Timeout.connect`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#connect%3AFloat64%3F-instance-method\">Timeout.connect</a></code></p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":248,"url":null},"def":{"name":"connect_timeout","visibility":"Public","body":"@timeout.connect"}},{"html_id":"connect_timeout=(timeout:Int32|Float64|Time::Span)-instance-method","name":"connect_timeout=","doc":"Alias `Timeout.connect=`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#connect%3D%28connect%3AInt32%7CFloat64%7CTime%3A%3ASpan%3F%29-instance-method\">Timeout.connect=</a></code></p>","abstract":false,"args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"args_string":"(timeout : Int32 | Float64 | Time::Span)","args_html":"(timeout : Int32 | Float64 | Time::Span)","location":{"filename":"src/halite/options.cr","line_number":253,"url":null},"def":{"name":"connect_timeout=","args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"visibility":"Public","body":"@timeout.connect = timeout"}},{"html_id":"cookies:HTTP::Cookies-instance-method","name":"cookies","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":79,"url":null},"def":{"name":"cookies","return_type":"HTTP::Cookies","visibility":"Public","body":"@cookies"}},{"html_id":"cookies=(cookies:HTTP::Cookies)-instance-method","name":"cookies=","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"args_string":"(cookies : HTTP::Cookies)","args_html":"(cookies : HTTP::Cookies)","location":{"filename":"src/halite/options.cr","line_number":79,"url":null},"def":{"name":"cookies=","args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"visibility":"Public","body":"@cookies = cookies"}},{"html_id":"dup-instance-method","name":"dup","doc":"Produces a shallow copy of obj—the instance variables of obj are copied,\nbut not the objects they reference. dup copies the tainted state of obj.","summary":"<p>Produces a shallow copy of obj—the instance variables of obj are copied, but not the objects they reference.</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":363,"url":null},"def":{"name":"dup","visibility":"Public","body":"Halite::Options.new(endpoint: @endpoint, headers: @headers.dup, cookies: @cookies, params: @params, form: @form, json: @json, raw: @raw, timeout: @timeout, follow: @follow, features: @features, tls: @tls)"}},{"html_id":"endpoint:URI?-instance-method","name":"endpoint","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":77,"url":null},"def":{"name":"endpoint","return_type":"URI | ::Nil","visibility":"Public","body":"@endpoint"}},{"html_id":"endpoint=(endpoint:URI?)-instance-method","name":"endpoint=","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":"URI | ::Nil"}],"args_string":"(endpoint : URI?)","args_html":"(endpoint : URI?)","location":{"filename":"src/halite/options.cr","line_number":77,"url":null},"def":{"name":"endpoint=","args":[{"name":"endpoint","external_name":"endpoint","restriction":"URI | ::Nil"}],"visibility":"Public","body":"@endpoint = endpoint"}},{"html_id":"endpoint=(endpoint:String)-instance-method","name":"endpoint=","doc":"Set endpoint of request","summary":"<p>Set endpoint of request</p>","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":"String"}],"args_string":"(endpoint : String)","args_html":"(endpoint : String)","location":{"filename":"src/halite/options.cr","line_number":238,"url":null},"def":{"name":"endpoint=","args":[{"name":"endpoint","external_name":"endpoint","restriction":"String"}],"visibility":"Public","body":"@endpoint = URI.parse(endpoint)"}},{"html_id":"features:Hash(String,Feature)-instance-method","name":"features","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":89,"url":null},"def":{"name":"features","return_type":"Hash(String, Feature)","visibility":"Public","body":"@features"}},{"html_id":"features=(features:Hash(String,Feature))-instance-method","name":"features=","abstract":false,"args":[{"name":"features","external_name":"features","restriction":"Hash(String, Feature)"}],"args_string":"(features : Hash(String, Feature))","args_html":"(features : Hash(String, <a href=\"../Halite/Feature.html\">Feature</a>))","location":{"filename":"src/halite/options.cr","line_number":89,"url":null},"def":{"name":"features=","args":[{"name":"features","external_name":"features","restriction":"Hash(String, Feature)"}],"visibility":"Public","body":"@features = features"}},{"html_id":"follow:Follow-instance-method","name":"follow","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":81,"url":null},"def":{"name":"follow","return_type":"Follow","visibility":"Public","body":"@follow"}},{"html_id":"follow=(follow:Follow)-instance-method","name":"follow=","abstract":false,"args":[{"name":"follow","external_name":"follow","restriction":"Follow"}],"args_string":"(follow : Follow)","args_html":"(follow : <a href=\"../Halite/Options/Follow.html\">Follow</a>)","location":{"filename":"src/halite/options.cr","line_number":81,"url":null},"def":{"name":"follow=","args":[{"name":"follow","external_name":"follow","restriction":"Follow"}],"visibility":"Public","body":"@follow = follow"}},{"html_id":"follow=(hops:Int32)-instance-method","name":"follow=","doc":"Alias `Follow.hops=`","summary":"<p>Alias <code><a href=\"../Halite/Options/Follow.html#hops%3D%28hops%3AInt32%29-instance-method\">Follow.hops=</a></code></p>","abstract":false,"args":[{"name":"hops","external_name":"hops","restriction":"Int32"}],"args_string":"(hops : Int32)","args_html":"(hops : Int32)","location":{"filename":"src/halite/options.cr","line_number":278,"url":null},"def":{"name":"follow=","args":[{"name":"hops","external_name":"hops","restriction":"Int32"}],"visibility":"Public","body":"@follow.hops = hops"}},{"html_id":"follow_strict-instance-method","name":"follow_strict","doc":"Alias `Follow.strict`","summary":"<p>Alias <code><a href=\"../Halite/Options/Follow.html#strict%3ABool-instance-method\">Follow.strict</a></code></p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":283,"url":null},"def":{"name":"follow_strict","visibility":"Public","body":"@follow.strict"}},{"html_id":"follow_strict=(strict:Bool)-instance-method","name":"follow_strict=","doc":"Alias `Follow.strict=`","summary":"<p>Alias <code><a href=\"../Halite/Options/Follow.html#strict%3D%28strict%3ABool%29-instance-method\">Follow.strict=</a></code></p>","abstract":false,"args":[{"name":"strict","external_name":"strict","restriction":"Bool"}],"args_string":"(strict : Bool)","args_html":"(strict : Bool)","location":{"filename":"src/halite/options.cr","line_number":288,"url":null},"def":{"name":"follow_strict=","args":[{"name":"strict","external_name":"strict","restriction":"Bool"}],"visibility":"Public","body":"@follow.strict = strict"}},{"html_id":"form:Hash(String,Type)-instance-method","name":"form","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":85,"url":null},"def":{"name":"form","return_type":"Hash(String, Type)","visibility":"Public","body":"@form"}},{"html_id":"form=(form:Hash(String,Type))-instance-method","name":"form=","abstract":false,"args":[{"name":"form","external_name":"form","restriction":"Hash(String, Type)"}],"args_string":"(form : Hash(String, Type))","args_html":"(form : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>))","location":{"filename":"src/halite/options.cr","line_number":85,"url":null},"def":{"name":"form=","args":[{"name":"form","external_name":"form","restriction":"Hash(String, Type)"}],"visibility":"Public","body":"@form = form"}},{"html_id":"headers:HTTP::Headers-instance-method","name":"headers","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":78,"url":null},"def":{"name":"headers","return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"html_id":"headers=(headers:HTTP::Headers)-instance-method","name":"headers=","abstract":false,"args":[{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(headers : HTTP::Headers)","args_html":"(headers : <a href=\"../HTTP/Headers.html\">HTTP::Headers</a>)","location":{"filename":"src/halite/options.cr","line_number":78,"url":null},"def":{"name":"headers=","args":[{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"}],"visibility":"Public","body":"@headers = headers"}},{"html_id":"headers=(headers:Hash(String,_)|NamedTuple)-instance-method","name":"headers=","doc":"Set headers of request","summary":"<p>Set headers of request</p>","abstract":false,"args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(headers : Hash(String, _) | NamedTuple)","args_html":"(headers : Hash(String, _) | NamedTuple)","location":{"filename":"src/halite/options.cr","line_number":243,"url":null},"def":{"name":"headers=","args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"visibility":"Public","body":"@headers = parse_headers(headers)"}},{"html_id":"json:Hash(String,Type)-instance-method","name":"json","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":86,"url":null},"def":{"name":"json","return_type":"Hash(String, Type)","visibility":"Public","body":"@json"}},{"html_id":"json=(json:Hash(String,Type))-instance-method","name":"json=","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"Hash(String, Type)"}],"args_string":"(json : Hash(String, Type))","args_html":"(json : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>))","location":{"filename":"src/halite/options.cr","line_number":86,"url":null},"def":{"name":"json=","args":[{"name":"json","external_name":"json","restriction":"Hash(String, Type)"}],"visibility":"Public","body":"@json = json"}},{"html_id":"logging:Bool-instance-method","name":"logging","doc":"Get logging status","summary":"<p>Get logging status</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":293,"url":null},"def":{"name":"logging","return_type":"Bool","visibility":"Public","body":"!@features.values.select do |v|\n  v.is_a?(Halite::Logging)\nend.empty?"}},{"html_id":"logging=(enable:Bool)-instance-method","name":"logging=","doc":"Quick enable logging\n\nBy defaults, use `Logging::Common` as logging output.","summary":"<p>Quick enable logging</p>","abstract":false,"args":[{"name":"enable","external_name":"enable","restriction":"Bool"}],"args_string":"(enable : Bool)","args_html":"(enable : Bool)","location":{"filename":"src/halite/options.cr","line_number":300,"url":null},"def":{"name":"logging=","args":[{"name":"enable","external_name":"enable","restriction":"Bool"}],"visibility":"Public","body":"if enable\n  if logging\n  else\n    with_features(\"logging\")\n  end\nelse\n  @features.delete(\"logging\")\nend"}},{"html_id":"merge(other:Halite::Options):Halite::Options-instance-method","name":"merge","doc":"Merge with other `Options` and return new `Halite::Options`","summary":"<p>Merge with other <code><a href=\"../Halite/Options.html\">Options</a></code> and return new <code><a href=\"../Halite/Options.html\">Halite::Options</a></code></p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Halite::Options"}],"args_string":"(other : Halite::Options) : Halite::Options","args_html":"(other : <a href=\"../Halite/Options.html\">Halite::Options</a>) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":309,"url":null},"def":{"name":"merge","args":[{"name":"other","external_name":"other","restriction":"Halite::Options"}],"return_type":"Halite::Options","visibility":"Public","body":"options = Halite::Options.new\noptions.merge!(dup)\noptions.merge!(other)\noptions\n"}},{"html_id":"merge!(other:Halite::Options):Halite::Options-instance-method","name":"merge!","doc":"Merge with other `Options` and return self","summary":"<p>Merge with other <code><a href=\"../Halite/Options.html\">Options</a></code> and return self</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Halite::Options"}],"args_string":"(other : Halite::Options) : Halite::Options","args_html":"(other : <a href=\"../Halite/Options.html\">Halite::Options</a>) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":317,"url":null},"def":{"name":"merge!","args":[{"name":"other","external_name":"other","restriction":"Halite::Options"}],"return_type":"Halite::Options","visibility":"Public","body":"if other.endpoint\n  @endpoint = other.endpoint\nend\n@headers.merge!(other.headers)\nif other.cookies != @cookies\n  other.cookies.each do |cookie|\n    @cookies << cookie\n  end\nend\nif (other.timeout.connect || other.timeout.read) || other.timeout.write\n  @timeout = other.timeout\nend\nif other.follow.updated?\n  @follow = other.follow\nend\nif other.features.empty?\nelse\n  @features.merge!(other.features)\nend\nif other.params\n  @params.merge!(other.params)\nend\nif other.form\n  @form.merge!(other.form)\nend\nif other.json\n  @json.merge!(other.json)\nend\nif other.raw\n  @raw = other.raw\nend\nif other.tls\n  @tls = other.tls\nend\nself\n"}},{"html_id":"params:Hash(String,Type)-instance-method","name":"params","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":84,"url":null},"def":{"name":"params","return_type":"Hash(String, Type)","visibility":"Public","body":"@params"}},{"html_id":"params=(params:Hash(String,Type))-instance-method","name":"params=","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Hash(String, Type)"}],"args_string":"(params : Hash(String, Type))","args_html":"(params : Hash(String, <a href=\"../Halite/Options/Type.html\">Type</a>))","location":{"filename":"src/halite/options.cr","line_number":84,"url":null},"def":{"name":"params=","args":[{"name":"params","external_name":"params","restriction":"Hash(String, Type)"}],"visibility":"Public","body":"@params = params"}},{"html_id":"raw:String?-instance-method","name":"raw","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":87,"url":null},"def":{"name":"raw","return_type":"String | ::Nil","visibility":"Public","body":"@raw"}},{"html_id":"raw=(raw:String?)-instance-method","name":"raw=","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"String | ::Nil"}],"args_string":"(raw : String?)","args_html":"(raw : String?)","location":{"filename":"src/halite/options.cr","line_number":87,"url":null},"def":{"name":"raw=","args":[{"name":"raw","external_name":"raw","restriction":"String | ::Nil"}],"visibility":"Public","body":"@raw = raw"}},{"html_id":"read_timeout-instance-method","name":"read_timeout","doc":"Alias `Timeout.read`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#read%3AFloat64%3F-instance-method\">Timeout.read</a></code></p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":258,"url":null},"def":{"name":"read_timeout","visibility":"Public","body":"@timeout.read"}},{"html_id":"read_timeout=(timeout:Int32|Float64|Time::Span)-instance-method","name":"read_timeout=","doc":"Alias `Timeout.read=`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#read%3D%28read%3AInt32%7CFloat64%7CTime%3A%3ASpan%3F%29-instance-method\">Timeout.read=</a></code></p>","abstract":false,"args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"args_string":"(timeout : Int32 | Float64 | Time::Span)","args_html":"(timeout : Int32 | Float64 | Time::Span)","location":{"filename":"src/halite/options.cr","line_number":263,"url":null},"def":{"name":"read_timeout=","args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"visibility":"Public","body":"@timeout.read = timeout"}},{"html_id":"timeout:Timeout-instance-method","name":"timeout","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":80,"url":null},"def":{"name":"timeout","return_type":"Timeout","visibility":"Public","body":"@timeout"}},{"html_id":"timeout=(timeout:Timeout)-instance-method","name":"timeout=","abstract":false,"args":[{"name":"timeout","external_name":"timeout","restriction":"Timeout"}],"args_string":"(timeout : Timeout)","args_html":"(timeout : <a href=\"../Halite/Options/Timeout.html\">Timeout</a>)","location":{"filename":"src/halite/options.cr","line_number":80,"url":null},"def":{"name":"timeout=","args":[{"name":"timeout","external_name":"timeout","restriction":"Timeout"}],"visibility":"Public","body":"@timeout = timeout"}},{"html_id":"tls:OpenSSL::SSL::Context::Client?-instance-method","name":"tls","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":82,"url":null},"def":{"name":"tls","return_type":"OpenSSL::SSL::Context::Client | ::Nil","visibility":"Public","body":"@tls"}},{"html_id":"tls=(tls:OpenSSL::SSL::Context::Client?)-instance-method","name":"tls=","abstract":false,"args":[{"name":"tls","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"args_string":"(tls : OpenSSL::SSL::Context::Client?)","args_html":"(tls : OpenSSL::SSL::Context::Client?)","location":{"filename":"src/halite/options.cr","line_number":82,"url":null},"def":{"name":"tls=","args":[{"name":"tls","external_name":"tls","restriction":"OpenSSL::SSL::Context::Client | ::Nil"}],"visibility":"Public","body":"@tls = tls"}},{"html_id":"to_h-instance-method","name":"to_h","doc":"Returns this collection as a plain Hash.","summary":"<p>Returns this collection as a plain Hash.</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":380,"url":null},"def":{"name":"to_h","visibility":"Public","body":"{\"endpoint\" => @endpoint, \"headers\" => @headers.to_h, \"cookies\" => @cookies.to_h, \"params\" => @params ? @params.to_h : nil, \"form\" => @form ? @form.to_h : nil, \"json\" => @json ? @json.to_h : nil, \"raw\" => @raw, \"connect_timeout\" => @timeout.connect, \"read_timeout\" => @timeout.read, \"follow\" => @follow.hops, \"follow_strict\" => @follow.strict}"}},{"html_id":"with_cookies(cookies:Hash(String,_)|NamedTuple):Halite::Options-instance-method","name":"with_cookies","doc":"Returns `Options` self with given cookies combined.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given cookies combined.</p>","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(cookies : Hash(String, _) | NamedTuple) : Halite::Options","args_html":"(cookies : Hash(String, _) | NamedTuple) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":147,"url":null},"def":{"name":"with_cookies","args":[{"name":"cookies","external_name":"cookies","restriction":"Hash(String, _) | NamedTuple"}],"return_type":"Halite::Options","visibility":"Public","body":"cookies.each do |key, value|\n  @cookies[key.to_s] = value.to_s\nend\nself\n"}},{"html_id":"with_cookies(cookies:HTTP::Cookies):Halite::Options-instance-method","name":"with_cookies","doc":"Returns `Options` self with given cookies combined.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given cookies combined.</p>","abstract":false,"args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"args_string":"(cookies : HTTP::Cookies) : Halite::Options","args_html":"(cookies : HTTP::Cookies) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":156,"url":null},"def":{"name":"with_cookies","args":[{"name":"cookies","external_name":"cookies","restriction":"HTTP::Cookies"}],"return_type":"Halite::Options","visibility":"Public","body":"cookies.each do |cookie|\n  with_cookies(cookie)\nend\nself\n"}},{"html_id":"with_cookies(cookie:HTTP::Cookie):Halite::Options-instance-method","name":"with_cookies","doc":"Returns `Options` self with given cookies combined.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given cookies combined.</p>","abstract":false,"args":[{"name":"cookie","external_name":"cookie","restriction":"HTTP::Cookie"}],"args_string":"(cookie : HTTP::Cookie) : Halite::Options","args_html":"(cookie : HTTP::Cookie) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":165,"url":null},"def":{"name":"with_cookies","args":[{"name":"cookie","external_name":"cookie","restriction":"HTTP::Cookie"}],"return_type":"Halite::Options","visibility":"Public","body":"cookie_header = HTTP::Headers {\"Cookie\" => cookie.to_cookie_header}\n@headers.merge!(cookie_header)\n@cookies.fill_from_client_headers(@headers)\nself\n"}},{"html_id":"with_cookies(**cookies):Halite::Options-instance-method","name":"with_cookies","doc":"Alias `with_cookies` method.","summary":"<p>Alias <code><a href=\"../Halite/Options.html#with_cookies%28%2A%2Acookies%29%3AHalite%3A%3AOptions-instance-method\">#with_cookies</a></code> method.</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":142,"url":null},"def":{"name":"with_cookies","double_splat":{"name":"cookies","external_name":"cookies","restriction":""},"return_type":"Halite::Options","visibility":"Public","body":"with_cookies(cookies)"}},{"html_id":"with_endpoint(endpoint:String|URI)-instance-method","name":"with_endpoint","abstract":false,"args":[{"name":"endpoint","external_name":"endpoint","restriction":"String | URI"}],"args_string":"(endpoint : String | URI)","args_html":"(endpoint : String | URI)","location":{"filename":"src/halite/options.cr","line_number":125,"url":null},"def":{"name":"with_endpoint","args":[{"name":"endpoint","external_name":"endpoint","restriction":"String | URI"}],"visibility":"Public","body":"self.endpoint = endpoint\nself\n"}},{"html_id":"with_features(name:String,opts:NamedTuple)-instance-method","name":"with_features","doc":"Returns `Options` self with feature name and options.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with feature name and options.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"opts","external_name":"opts","restriction":"NamedTuple"}],"args_string":"(name : String, opts : NamedTuple)","args_html":"(name : String, opts : NamedTuple)","location":{"filename":"src/halite/options.cr","line_number":213,"url":null},"def":{"name":"with_features","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"opts","external_name":"opts","restriction":"NamedTuple"}],"visibility":"Public","body":"if klass = Halite.feature?(name)\nelse\n  raise(UnRegisterFeatureError.new(\"Not available feature: #{name}\"))\nend\n@features[name] = klass.new(**opts)\nself\n"}},{"html_id":"with_features(name:String,feature:Feature)-instance-method","name":"with_features","doc":"Returns `Options` self with feature name and feature.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with feature name and feature.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"feature","external_name":"feature","restriction":"Feature"}],"args_string":"(name : String, feature : Feature)","args_html":"(name : String, feature : <a href=\"../Halite/Feature.html\">Feature</a>)","location":{"filename":"src/halite/options.cr","line_number":220,"url":null},"def":{"name":"with_features","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"feature","external_name":"feature","restriction":"Feature"}],"visibility":"Public","body":"@features[name] = feature\nself\n"}},{"html_id":"with_features(*features)-instance-method","name":"with_features","doc":"Returns `Options` self with the name of features.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with the name of features.</p>","abstract":false,"args":[{"name":"features","external_name":"features","restriction":""}],"args_string":"(*features)","args_html":"(*features)","location":{"filename":"src/halite/options.cr","line_number":200,"url":null},"def":{"name":"with_features","args":[{"name":"features","external_name":"features","restriction":""}],"splat_index":0,"visibility":"Public","body":"features.each do |feature|\n  with_features(feature, NamedTuple.new)\nend\nself\n"}},{"html_id":"with_features(feature_name:String,**opts)-instance-method","name":"with_features","doc":"Returns `Options` self with feature name and options.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with feature name and options.</p>","abstract":false,"args":[{"name":"feature_name","external_name":"feature_name","restriction":"String"}],"args_string":"(feature_name : String, **opts)","args_html":"(feature_name : String, **opts)","location":{"filename":"src/halite/options.cr","line_number":208,"url":null},"def":{"name":"with_features","args":[{"name":"feature_name","external_name":"feature_name","restriction":"String"}],"double_splat":{"name":"opts","external_name":"opts","restriction":""},"visibility":"Public","body":"with_features(feature_name, opts)"}},{"html_id":"with_follow(follow=Follow::MAX_HOPS,strict=Follow::STRICT):Halite::Options-instance-method","name":"with_follow","doc":"Returns `Options` self with given max hops of redirect times.\n\n```\n# Automatically following redirects\noptions.with_follow\n# A maximum of 3 subsequent redirects\noptions.with_follow(3)\n# Set subsequent redirects\noptions.with_follow(3)\n```","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given max hops of redirect times.</p>","abstract":false,"args":[{"name":"follow","default_value":"Follow::MAX_HOPS","external_name":"follow","restriction":""},{"name":"strict","default_value":"Follow::STRICT","external_name":"strict","restriction":""}],"args_string":"(follow = Follow::MAX_HOPS, strict = Follow::STRICT) : Halite::Options","args_html":"(follow = <span class=\"t\">Follow</span><span class=\"t\">::</span><span class=\"t\">MAX_HOPS</span>, strict = <span class=\"t\">Follow</span><span class=\"t\">::</span><span class=\"t\">STRICT</span>) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":182,"url":null},"def":{"name":"with_follow","args":[{"name":"follow","default_value":"Follow::MAX_HOPS","external_name":"follow","restriction":""},{"name":"strict","default_value":"Follow::STRICT","external_name":"strict","restriction":""}],"return_type":"Halite::Options","visibility":"Public","body":"@follow.hops = follow\n@follow.strict = strict\nself\n"}},{"html_id":"with_headers(headers:Hash(String,_)|NamedTuple):Halite::Options-instance-method","name":"with_headers","doc":"Returns `Options` self with given headers combined.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given headers combined.</p>","abstract":false,"args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(headers : Hash(String, _) | NamedTuple) : Halite::Options","args_html":"(headers : Hash(String, _) | NamedTuple) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":136,"url":null},"def":{"name":"with_headers","args":[{"name":"headers","external_name":"headers","restriction":"Hash(String, _) | NamedTuple"}],"return_type":"Halite::Options","visibility":"Public","body":"@headers.merge!(parse_headers(headers))\nself\n"}},{"html_id":"with_headers(**with_headers):Halite::Options-instance-method","name":"with_headers","doc":"Alias `with_headers` method.","summary":"<p>Alias <code><a href=\"../Halite/Options.html#with_headers%28%2A%2Awith_headers%29%3AHalite%3A%3AOptions-instance-method\">#with_headers</a></code> method.</p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":131,"url":null},"def":{"name":"with_headers","double_splat":{"name":"with_headers","external_name":"with_headers","restriction":""},"return_type":"Halite::Options","visibility":"Public","body":"with_headers(with_headers)"}},{"html_id":"with_logging(logging:Halite::Logging::Abstract)-instance-method","name":"with_logging","doc":"Returns `Options` self with given logging, depend on `with_features`.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given logging, depend on <code><a href=\"../Halite/Options.html#with_features%28name%3AString%2Copts%3ANamedTuple%29-instance-method\">#with_features</a></code>.</p>","abstract":false,"args":[{"name":"logging","external_name":"logging","restriction":"Halite::Logging::Abstract"}],"args_string":"(logging : Halite::Logging::Abstract)","args_html":"(logging : <a href=\"../Halite/Logging/Abstract.html\">Halite::Logging::Abstract</a>)","location":{"filename":"src/halite/options.cr","line_number":232,"url":null},"def":{"name":"with_logging","args":[{"name":"logging","external_name":"logging","restriction":"Halite::Logging::Abstract"}],"visibility":"Public","body":"with_features(\"logging\", logging: logging)\nself\n"}},{"html_id":"with_logging(format:String,**opts)-instance-method","name":"with_logging","doc":"Returns `Options` iitself with given format and the options of format.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> iitself with given format and the options of format.</p>","abstract":false,"args":[{"name":"format","external_name":"format","restriction":"String"}],"args_string":"(format : String, **opts)","args_html":"(format : String, **opts)","location":{"filename":"src/halite/options.cr","line_number":226,"url":null},"def":{"name":"with_logging","args":[{"name":"format","external_name":"format","restriction":"String"}],"double_splat":{"name":"opts","external_name":"opts","restriction":""},"visibility":"Public","body":"if format_cls = Logging[format]?\nelse\n  raise(UnRegisterLoggerFormatError.new(\"Not available logging format: #{format}\"))\nend\nwith_logging(format_cls.new(**opts))\n"}},{"html_id":"with_timeout(connect:Int32|Float64|Time::Span?=nil,read:Int32|Float64|Time::Span?=nil,write:Int32|Float64|Time::Span?=nil):Halite::Options-instance-method","name":"with_timeout","doc":"Returns `Options` self with given connect, read timeout.","summary":"<p>Returns <code><a href=\"../Halite/Options.html\">Options</a></code> self with given connect, read timeout.</p>","abstract":false,"args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(connect : Int32 | Float64 | Time::Span? = nil, read : Int32 | Float64 | Time::Span? = nil, write : Int32 | Float64 | Time::Span? = nil) : Halite::Options","args_html":"(connect : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, read : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, write : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>) : <a href=\"../Halite/Options.html\">Halite::Options</a>","location":{"filename":"src/halite/options.cr","line_number":189,"url":null},"def":{"name":"with_timeout","args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"return_type":"Halite::Options","visibility":"Public","body":"if connect\n  @timeout.connect = connect.to_f\nend\nif read\n  @timeout.read = read.to_f\nend\nif write\n  @timeout.write = write.to_f\nend\nself\n"}},{"html_id":"write_timeout-instance-method","name":"write_timeout","doc":"Alias `Timeout.write`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#write%3AFloat64%3F-instance-method\">Timeout.write</a></code></p>","abstract":false,"location":{"filename":"src/halite/options.cr","line_number":268,"url":null},"def":{"name":"write_timeout","visibility":"Public","body":"@timeout.write"}},{"html_id":"write_timeout=(timeout:Int32|Float64|Time::Span)-instance-method","name":"write_timeout=","doc":"Alias `Timeout.write=`","summary":"<p>Alias <code><a href=\"../Halite/Options/Timeout.html#write%3D%28write%3AInt32%7CFloat64%7CTime%3A%3ASpan%3F%29-instance-method\">Timeout.write=</a></code></p>","abstract":false,"args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"args_string":"(timeout : Int32 | Float64 | Time::Span)","args_html":"(timeout : Int32 | Float64 | Time::Span)","location":{"filename":"src/halite/options.cr","line_number":273,"url":null},"def":{"name":"write_timeout=","args":[{"name":"timeout","external_name":"timeout","restriction":"Int32 | Float64 | Time::Span"}],"visibility":"Public","body":"@timeout.write = timeout"}}],"types":[{"html_id":"halite/Halite/Options/Follow","path":"Halite/Options/Follow.html","kind":"struct","full_name":"Halite::Options::Follow","name":"Follow","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/options/follow.cr","line_number":3,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DEFAULT_HOPS","name":"DEFAULT_HOPS","value":"0","doc":"No follow by default","summary":"<p>No follow by default</p>"},{"id":"MAX_HOPS","name":"MAX_HOPS","value":"5","doc":"A maximum of 5 subsequent redirects","summary":"<p>A maximum of 5 subsequent redirects</p>"},{"id":"STRICT","name":"STRICT","value":"true","doc":"Redirector hops policy","summary":"<p>Redirector hops policy</p>"}],"namespace":{"html_id":"halite/Halite/Options","kind":"class","full_name":"Halite::Options","name":"Options"},"constructors":[{"html_id":"new(hops:Int32?=nil,strict:Bool?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"hops","default_value":"nil","external_name":"hops","restriction":"Int32 | ::Nil"},{"name":"strict","default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"args_string":"(hops : Int32? = nil, strict : Bool? = nil)","args_html":"(hops : Int32? = <span class=\"n\">nil</span>, strict : Bool? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/options/follow.cr","line_number":16,"url":null},"def":{"name":"new","args":[{"name":"hops","default_value":"nil","external_name":"hops","restriction":"Int32 | ::Nil"},{"name":"strict","default_value":"nil","external_name":"strict","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(hops, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"hops:Int32-instance-method","name":"hops","abstract":false,"location":{"filename":"src/halite/options/follow.cr","line_number":13,"url":null},"def":{"name":"hops","return_type":"Int32","visibility":"Public","body":"@hops"}},{"html_id":"hops=(hops:Int32)-instance-method","name":"hops=","abstract":false,"args":[{"name":"hops","external_name":"hops","restriction":"Int32"}],"args_string":"(hops : Int32)","args_html":"(hops : Int32)","location":{"filename":"src/halite/options/follow.cr","line_number":13,"url":null},"def":{"name":"hops=","args":[{"name":"hops","external_name":"hops","restriction":"Int32"}],"visibility":"Public","body":"@hops = hops"}},{"html_id":"strict:Bool-instance-method","name":"strict","abstract":false,"location":{"filename":"src/halite/options/follow.cr","line_number":14,"url":null},"def":{"name":"strict","return_type":"Bool","visibility":"Public","body":"@strict"}},{"html_id":"strict=(strict:Bool)-instance-method","name":"strict=","abstract":false,"args":[{"name":"strict","external_name":"strict","restriction":"Bool"}],"args_string":"(strict : Bool)","args_html":"(strict : Bool)","location":{"filename":"src/halite/options/follow.cr","line_number":14,"url":null},"def":{"name":"strict=","args":[{"name":"strict","external_name":"strict","restriction":"Bool"}],"visibility":"Public","body":"@strict = strict"}},{"html_id":"strict?-instance-method","name":"strict?","abstract":false,"location":{"filename":"src/halite/options/follow.cr","line_number":21,"url":null},"def":{"name":"strict?","visibility":"Public","body":"@strict == true"}},{"html_id":"updated?-instance-method","name":"updated?","abstract":false,"location":{"filename":"src/halite/options/follow.cr","line_number":25,"url":null},"def":{"name":"updated?","visibility":"Public","body":"(@hops != DEFAULT_HOPS) || (@strict != STRICT)"}}]},{"html_id":"halite/Halite/Options/Timeout","path":"Halite/Options/Timeout.html","kind":"struct","full_name":"Halite::Options::Timeout","name":"Timeout","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/options/timeout.cr","line_number":4,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Options","kind":"class","full_name":"Halite::Options","name":"Options"},"doc":"Timeout struct","summary":"<p>Timeout struct</p>","constructors":[{"html_id":"new(connect:Int32|Float64|Time::Span?=nil,read:Int32|Float64|Time::Span?=nil,write:Int32|Float64|Time::Span?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(connect : Int32 | Float64 | Time::Span? = nil, read : Int32 | Float64 | Time::Span? = nil, write : Int32 | Float64 | Time::Span? = nil)","args_html":"(connect : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, read : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>, write : Int32 | Float64 | Time::Span? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/options/timeout.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"connect","default_value":"nil","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"read","default_value":"nil","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"},{"name":"write","default_value":"nil","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(connect, read, write)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"connect:Float64?-instance-method","name":"connect","abstract":false,"location":{"filename":"src/halite/options/timeout.cr","line_number":5,"url":null},"def":{"name":"connect","return_type":"Float64 | ::Nil","visibility":"Public","body":"@connect"}},{"html_id":"connect=(connect:Int32|Float64|Time::Span?)-instance-method","name":"connect=","abstract":false,"args":[{"name":"connect","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(connect : Int32 | Float64 | Time::Span?)","args_html":"(connect : Int32 | Float64 | Time::Span?)","location":{"filename":"src/halite/options/timeout.cr","line_number":17,"url":null},"def":{"name":"connect=","args":[{"name":"connect","external_name":"connect","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"visibility":"Public","body":"@connect = timeout_value(connect)"}},{"html_id":"read:Float64?-instance-method","name":"read","abstract":false,"location":{"filename":"src/halite/options/timeout.cr","line_number":6,"url":null},"def":{"name":"read","return_type":"Float64 | ::Nil","visibility":"Public","body":"@read"}},{"html_id":"read=(read:Int32|Float64|Time::Span?)-instance-method","name":"read=","abstract":false,"args":[{"name":"read","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(read : Int32 | Float64 | Time::Span?)","args_html":"(read : Int32 | Float64 | Time::Span?)","location":{"filename":"src/halite/options/timeout.cr","line_number":21,"url":null},"def":{"name":"read=","args":[{"name":"read","external_name":"read","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"visibility":"Public","body":"@read = timeout_value(read)"}},{"html_id":"write:Float64?-instance-method","name":"write","abstract":false,"location":{"filename":"src/halite/options/timeout.cr","line_number":7,"url":null},"def":{"name":"write","return_type":"Float64 | ::Nil","visibility":"Public","body":"@write"}},{"html_id":"write=(write:Int32|Float64|Time::Span?)-instance-method","name":"write=","abstract":false,"args":[{"name":"write","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"args_string":"(write : Int32 | Float64 | Time::Span?)","args_html":"(write : Int32 | Float64 | Time::Span?)","location":{"filename":"src/halite/options/timeout.cr","line_number":25,"url":null},"def":{"name":"write=","args":[{"name":"write","external_name":"write","restriction":"Int32 | Float64 | Time::Span | ::Nil"}],"visibility":"Public","body":"@write = timeout_value(write)"}}]},{"html_id":"halite/Halite/Options/Type","path":"Halite/Options/Type.html","kind":"alias","full_name":"Halite::Options::Type","name":"Type","abstract":false,"locations":[{"filename":"src/halite/options.cr","line_number":75,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":true,"aliased":"(Array(Halite::Options::Type) | Bool | File | Float64 | Hash(String, Halite::Options::Type) | Int32 | Int64 | String | Symbol | Nil)","aliased_html":"Array(<a href=\"../../Halite/Options/Type.html\">Halite::Options::Type</a>) | Bool | File | Float64 | Hash(String, <a href=\"../../Halite/Options/Type.html\">Halite::Options::Type</a>) | Int32 | Int64 | String | Symbol | Nil","const":false,"namespace":{"html_id":"halite/Halite/Options","kind":"class","full_name":"Halite::Options","name":"Options"},"doc":"Types of options in a Hash","summary":"<p>Types of options in a Hash</p>"}]},{"html_id":"halite/Halite/RateLimit","path":"Halite/RateLimit.html","kind":"struct","full_name":"Halite::RateLimit","name":"RateLimit","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/rate_limit.cr","line_number":11,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"RATELIMIT_LIMIT","name":"RATELIMIT_LIMIT","value":"\"X-RateLimit-Limit\""},{"id":"RATELIMIT_REMAINING","name":"RATELIMIT_REMAINING","value":"\"X-RateLimit-Remaining\""},{"id":"RATELIMIT_RESET","name":"RATELIMIT_RESET","value":"\"X-RateLimit-Reset\""}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"doc":"Limit Rate\n\nref: [https://tools.ietf.org/id/draft-polli-ratelimit-headers-00.html](https://tools.ietf.org/id/draft-polli-ratelimit-headers-00.html)\n\n```\n> X-RateLimit-Limit: 5000\n> X-RateLimit-Remaining: 4987\n> X-RateLimit-Reset: 1350085394\n```","summary":"<p>Limit Rate</p>","class_methods":[{"html_id":"parse(headers:HTTP::Headers)-class-method","name":"parse","abstract":false,"args":[{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(headers : HTTP::Headers)","args_html":"(headers : <a href=\"../HTTP/Headers.html\">HTTP::Headers</a>)","location":{"filename":"src/halite/rate_limit.cr","line_number":16,"url":null},"def":{"name":"parse","args":[{"name":"headers","external_name":"headers","restriction":"HTTP::Headers"}],"visibility":"Public","body":"limit = headers[RATELIMIT_LIMIT]?.try(&.to_i)\nremaining = headers[RATELIMIT_REMAINING]?.try(&.to_i)\nreset = headers[RATELIMIT_RESET]?.try(&.to_i)\nif ((!limit) && (!remaining)) && (!reset)\n  return\nend\nnew(limit, remaining, reset)\n"}}],"constructors":[{"html_id":"new(limit:Int32?,remaining:Int32?,reset:Int32?)-class-method","name":"new","abstract":false,"args":[{"name":"limit","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"remaining","external_name":"remaining","restriction":"Int32 | ::Nil"},{"name":"reset","external_name":"reset","restriction":"Int32 | ::Nil"}],"args_string":"(limit : Int32?, remaining : Int32?, reset : Int32?)","args_html":"(limit : Int32?, remaining : Int32?, reset : Int32?)","location":{"filename":"src/halite/rate_limit.cr","line_number":27,"url":null},"def":{"name":"new","args":[{"name":"limit","external_name":"limit","restriction":"Int32 | ::Nil"},{"name":"remaining","external_name":"remaining","restriction":"Int32 | ::Nil"},{"name":"reset","external_name":"reset","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(limit, remaining, reset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"limit:Int32?-instance-method","name":"limit","abstract":false,"location":{"filename":"src/halite/rate_limit.cr","line_number":25,"url":null},"def":{"name":"limit","visibility":"Public","body":"@limit"}},{"html_id":"remaining:Int32?-instance-method","name":"remaining","abstract":false,"location":{"filename":"src/halite/rate_limit.cr","line_number":25,"url":null},"def":{"name":"remaining","visibility":"Public","body":"@remaining"}},{"html_id":"reset:Int32?-instance-method","name":"reset","abstract":false,"location":{"filename":"src/halite/rate_limit.cr","line_number":25,"url":null},"def":{"name":"reset","visibility":"Public","body":"@reset"}}]},{"html_id":"halite/Halite/Redirector","path":"Halite/Redirector.html","kind":"class","full_name":"Halite::Redirector","name":"Redirector","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/redirector.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"REDIRECT_CODES","name":"REDIRECT_CODES","value":"[300, 301, 302, 303, 307, 308]","doc":"HTTP status codes which indicate redirects","summary":"<p>HTTP status codes which indicate redirects</p>"},{"id":"SEE_OTHER_ALLOWED_VERBS","name":"SEE_OTHER_ALLOWED_VERBS","value":"[\"GET\", \"HEAD\"] of ::String","doc":"Verbs which will remain unchanged upon See Other response.","summary":"<p>Verbs which will remain unchanged upon See Other response.</p>"},{"id":"STRICT_SENSITIVE_CODES","name":"STRICT_SENSITIVE_CODES","value":"[300, 301, 302]","doc":"Codes which which should raise StateError in strict mode if original\nrequest was any of {UNSAFE_VERBS}","summary":"<p>Codes which which should raise StateError in strict mode if original request was any of {UNSAFE_VERBS}</p>"},{"id":"UNSAFE_VERBS","name":"UNSAFE_VERBS","value":"[\"PUT\", \"DELETE\", \"POST\"] of ::String","doc":"Insecure http verbs, which should trigger StateError in strict mode\nupon {STRICT_SENSITIVE_CODES}","summary":"<p>Insecure http verbs, which should trigger StateError in strict mode upon {STRICT_SENSITIVE_CODES}</p>"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"constructors":[{"html_id":"new(request:Halite::Request,response:Halite::Response,options:Halite::Options)-class-method","name":"new","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response"},{"name":"options","external_name":"options","restriction":"Halite::Options"}],"args_string":"(request : Halite::Request, response : Halite::Response, options : Halite::Options)","args_html":"(request : <a href=\"../Halite/Request.html\">Halite::Request</a>, response : <a href=\"../Halite/Response.html\">Halite::Response</a>, options : <a href=\"../Halite/Options.html\">Halite::Options</a>)","location":{"filename":"src/halite/redirector.cr","line_number":17,"url":null},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response"},{"name":"options","external_name":"options","restriction":"Halite::Options"}],"visibility":"Public","body":"new(request, response, options.follow.hops, options.follow.strict)"}},{"html_id":"new(request:Halite::Request,response:Halite::Response,max_hops=5,strict=true)-class-method","name":"new","doc":"Instance a new Redirector","summary":"<p>Instance a new Redirector</p>","abstract":false,"args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response"},{"name":"max_hops","default_value":"5","external_name":"max_hops","restriction":""},{"name":"strict","default_value":"true","external_name":"strict","restriction":""}],"args_string":"(request : Halite::Request, response : Halite::Response, max_hops = 5, strict = true)","args_html":"(request : <a href=\"../Halite/Request.html\">Halite::Request</a>, response : <a href=\"../Halite/Response.html\">Halite::Response</a>, max_hops = <span class=\"n\">5</span>, strict = <span class=\"n\">true</span>)","location":{"filename":"src/halite/redirector.cr","line_number":25,"url":null},"def":{"name":"new","args":[{"name":"request","external_name":"request","restriction":"Halite::Request"},{"name":"response","external_name":"response","restriction":"Halite::Response"},{"name":"max_hops","default_value":"5","external_name":"max_hops","restriction":""},{"name":"strict","default_value":"true","external_name":"strict","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(request, response, max_hops, strict)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"avaiable?-instance-method","name":"avaiable?","doc":"Return `true` if it should redirect, else `false`","summary":"<p>Return <code>true</code> if it should redirect, else <code>false</code></p>","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":54,"url":null},"def":{"name":"avaiable?","visibility":"Public","body":"REDIRECT_CODES.includes?(@response.status_code)"}},{"html_id":"each_redirect(&block:Halite::Request->Halite::Response)-instance-method","name":"each_redirect","doc":"Loop each redirect request with block call","summary":"<p>Loop each redirect request with block call</p>","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":41,"url":null},"def":{"name":"each_redirect","yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Request -> Halite::Response)"},"visibility":"Public","body":"while avaiable?\n  @visited << \"#{@request.verb} #{@request.uri}\"\n  if too_many_hops?\n    raise(TooManyRedirectsError.new)\n  end\n  if endless_loop?\n    raise(EndlessRedirectError.new)\n  end\n  @request = redirect_to(@response.headers[\"Location\"]?)\n  @response = block.call(@request)\nend"}},{"html_id":"endless_loop?-instance-method","name":"endless_loop?","doc":"Check if we got into an endless loop","summary":"<p>Check if we got into an endless loop</p>","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":80,"url":null},"def":{"name":"endless_loop?","visibility":"Public","body":"2 <= (@visited.count(@visited.last))"}},{"html_id":"max_hops:Int32-instance-method","name":"max_hops","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":22,"url":null},"def":{"name":"max_hops","return_type":"Int32","visibility":"Public","body":"@max_hops"}},{"html_id":"perform(&block:Halite::Request->Halite::Response):Halite::Response-instance-method","name":"perform","doc":"Follows redirects until non-redirect response found","summary":"<p>Follows redirects until non-redirect response found</p>","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":30,"url":null},"def":{"name":"perform","yields":1,"block_arg":{"name":"block","external_name":"block","restriction":"(Halite::Request -> Halite::Response)"},"return_type":"Halite::Response","visibility":"Public","body":"if avaiable?\n  each_redirect do |request|\n    block.call(request)\n  end\nend\n@response\n"}},{"html_id":"strict:Bool-instance-method","name":"strict","abstract":false,"location":{"filename":"src/halite/redirector.cr","line_number":21,"url":null},"def":{"name":"strict","return_type":"Bool","visibility":"Public","body":"@strict"}}]},{"html_id":"halite/Halite/Request","path":"Halite/Request.html","kind":"class","full_name":"Halite::Request","name":"Request","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/request.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"METHODS","name":"METHODS","value":"[\"GET\", \"PUT\", \"POST\", \"DELETE\", \"HEAD\", \"PATCH\", \"OPTIONS\"] of ::String","doc":"Allowed methods\n\nSee more: [https://github.com/crystal-lang/crystal/blob/863f301cfe9e9757a6bf1a494ab7bf49bfc07a06/src/http/client.cr#L329](https://github.com/crystal-lang/crystal/blob/863f301cfe9e9757a6bf1a494ab7bf49bfc07a06/src/http/client.cr#L329)","summary":"<p>Allowed methods</p>"},{"id":"SCHEMES","name":"SCHEMES","value":"[\"http\", \"https\"] of ::String","doc":"Allowed schemes","summary":"<p>Allowed schemes</p>"},{"id":"USER_AGENT","name":"USER_AGENT","value":"\"Halite/#{Halite::VERSION}\"","doc":"Request user-agent by default","summary":"<p>Request user-agent by default</p>"}],"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"constructors":[{"html_id":"new(verb:String,uri:URI,headers:HTTP::Headers=HTTP::Headers.new,body:String=\"\")-class-method","name":"new","abstract":false,"args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","default_value":"\"\"","external_name":"body","restriction":"String"}],"args_string":"(verb : String, uri : URI, headers : HTTP::Headers = HTTP::Headers.new, body : String = \"\")","args_html":"(verb : String, uri : URI, headers : <a href=\"../HTTP/Headers.html\">HTTP::Headers</a> = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, body : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/halite/request.cr","line_number":29,"url":null},"def":{"name":"new","args":[{"name":"verb","external_name":"verb","restriction":"String"},{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"},{"name":"body","default_value":"\"\"","external_name":"body","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(verb, uri, headers, body)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body:String-instance-method","name":"body","doc":"The payload of request","summary":"<p>The payload of request</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":27,"url":null},"def":{"name":"body","return_type":"String","visibility":"Public","body":"@body"}},{"html_id":"domain-instance-method","name":"domain","doc":"@return `URI` with the scheme, user, password, port and host combined","summary":"<p>@return <code>URI</code> with the scheme, user, password, port and host combined</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":52,"url":null},"def":{"name":"domain","visibility":"Public","body":"URI.new(@uri.scheme, @uri.host, @uri.port, \"\", nil, @uri.user, @uri.password, nil)"}},{"html_id":"full_path-instance-method","name":"full_path","doc":"@return `String` with the path, query and fragment combined","summary":"<p>@return <code>String</code> with the path, query and fragment combined</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":57,"url":null},"def":{"name":"full_path","visibility":"Public","body":"String.build do |str|\n  {% if Crystal::VERSION < \"0.36.0\" %}\n          str << @uri.full_path\n        {% else %}\n          str << @uri.request_target\n        {% end %}\n  if @uri.fragment\n    (str << \"#\") << @uri.fragment\n  end\nend"}},{"html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"The headers of request","summary":"<p>The headers of request</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":24,"url":null},"def":{"name":"headers","return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"html_id":"redirect(uri:String,verb=@verb)-instance-method","name":"redirect","doc":"Returns new Request with updated uri","summary":"<p>Returns new Request with updated uri</p>","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"verb","default_value":"@verb","external_name":"verb","restriction":""}],"args_string":"(uri : String, verb = @verb)","args_html":"(uri : String, verb = @verb)","location":{"filename":"src/halite/request.cr","line_number":44,"url":null},"def":{"name":"redirect","args":[{"name":"uri","external_name":"uri","restriction":"String"},{"name":"verb","default_value":"@verb","external_name":"verb","restriction":""}],"visibility":"Public","body":"headers = @headers.dup\nheaders.delete(\"Host\")\nRequest.new(verb, redirect_uri(domain, uri), headers, body)\n"}},{"html_id":"scheme:String-instance-method","name":"scheme","doc":"The scheme name of request","summary":"<p>The scheme name of request</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":21,"url":null},"def":{"name":"scheme","return_type":"String","visibility":"Public","body":"@scheme"}},{"html_id":"uri:URI-instance-method","name":"uri","doc":"The uri of request","summary":"<p>The uri of request</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":18,"url":null},"def":{"name":"uri","return_type":"URI","visibility":"Public","body":"@uri"}},{"html_id":"verb:String-instance-method","name":"verb","doc":"The verb name of request","summary":"<p>The verb name of request</p>","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":15,"url":null},"def":{"name":"verb","return_type":"String","visibility":"Public","body":"@verb"}}],"types":[{"html_id":"halite/Halite/Request/Data","path":"Halite/Request/Data.html","kind":"struct","full_name":"Halite::Request::Data","name":"Data","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/request.cr","line_number":85,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite/Request","kind":"class","full_name":"Halite::Request","name":"Request"},"doc":"Request data of body","summary":"<p>Request data of body</p>","constructors":[{"html_id":"new(body:String,content_type:String?=nil)-class-method","name":"new","abstract":false,"args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"}],"args_string":"(body : String, content_type : String? = nil)","args_html":"(body : String, content_type : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/request.cr","line_number":88,"url":null},"def":{"name":"new","args":[{"name":"body","external_name":"body","restriction":"String"},{"name":"content_type","default_value":"nil","external_name":"content_type","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(body, content_type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body:String-instance-method","name":"body","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":86,"url":null},"def":{"name":"body","visibility":"Public","body":"@body"}},{"html_id":"content_type:String?-instance-method","name":"content_type","abstract":false,"location":{"filename":"src/halite/request.cr","line_number":86,"url":null},"def":{"name":"content_type","visibility":"Public","body":"@content_type"}}]}]},{"html_id":"halite/Halite/Response","path":"Halite/Response.html","kind":"class","full_name":"Halite::Response","name":"Response","abstract":false,"superclass":{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"halite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/response.cr","line_number":2,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"halite/Halite","kind":"module","full_name":"Halite","name":"Halite"},"constructors":[{"html_id":"new(uri:URI,status_code:Int32,body:String?=nil,headers=HTTP::Headers.new,status_message=nil,body_io:IO?=nil,version=\"HTTP/1.1\",history=[]ofHalite::Response)-class-method","name":"new","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"status_code","external_name":"status_code","restriction":"Int32"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"status_message","default_value":"nil","external_name":"status_message","restriction":""},{"name":"body_io","default_value":"nil","external_name":"body_io","restriction":"IO | ::Nil"},{"name":"version","default_value":"\"HTTP/1.1\"","external_name":"version","restriction":""},{"name":"history","default_value":"[] of Halite::Response","external_name":"history","restriction":""}],"args_string":"(uri : URI, status_code : Int32, body : String? = nil, headers = HTTP::Headers.new, status_message = nil, body_io : IO? = nil, version = \"HTTP/1.1\", history = [] of Halite::Response)","args_html":"(uri : URI, status_code : Int32, body : String? = <span class=\"n\">nil</span>, headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, status_message = <span class=\"n\">nil</span>, body_io : IO? = <span class=\"n\">nil</span>, version = <span class=\"s\">&quot;HTTP/1.1&quot;</span>, history = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Response</span>)","location":{"filename":"src/halite/response.cr","line_number":3,"url":null},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"status_code","external_name":"status_code","restriction":"Int32"},{"name":"body","default_value":"nil","external_name":"body","restriction":"String | ::Nil"},{"name":"headers","default_value":"HTTP::Headers.new","external_name":"headers","restriction":""},{"name":"status_message","default_value":"nil","external_name":"status_message","restriction":""},{"name":"body_io","default_value":"nil","external_name":"body_io","restriction":"IO | ::Nil"},{"name":"version","default_value":"\"HTTP/1.1\"","external_name":"version","restriction":""},{"name":"history","default_value":"[] of Halite::Response","external_name":"history","restriction":""}],"visibility":"Public","body":"conn = HTTP::Client::Response.new(status_code, body, headers, status_message, version, body_io)\nnew(uri, conn, history)\n"}},{"html_id":"new(uri:URI,conn:HTTP::Client::Response,history=[]ofHalite::Response)-class-method","name":"new","abstract":false,"args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"conn","external_name":"conn","restriction":"HTTP::Client::Response"},{"name":"history","default_value":"[] of Halite::Response","external_name":"history","restriction":""}],"args_string":"(uri : URI, conn : HTTP::Client::Response, history = [] of Halite::Response)","args_html":"(uri : URI, conn : HTTP::Client::Response, history = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Halite</span><span class=\"t\">::</span><span class=\"t\">Response</span>)","location":{"filename":"src/halite/response.cr","line_number":13,"url":null},"def":{"name":"new","args":[{"name":"uri","external_name":"uri","restriction":"URI"},{"name":"conn","external_name":"conn","restriction":"HTTP::Client::Response"},{"name":"history","default_value":"[] of Halite::Response","external_name":"history","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(uri, conn, history)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"body(*args,**options)-instance-method","name":"body","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":25,"url":null},"def":{"name":"body","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.body(*args, **options)"}},{"html_id":"body(*args,**options,&)-instance-method","name":"body","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":25,"url":null},"def":{"name":"body","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.body(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"body_io(*args,**options)-instance-method","name":"body_io","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":26,"url":null},"def":{"name":"body_io","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.body_io(*args, **options)"}},{"html_id":"body_io(*args,**options,&)-instance-method","name":"body_io","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":26,"url":null},"def":{"name":"body_io","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.body_io(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"charset(*args,**options)-instance-method","name":"charset","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":23,"url":null},"def":{"name":"charset","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.charset(*args, **options)"}},{"html_id":"charset(*args,**options,&)-instance-method","name":"charset","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":23,"url":null},"def":{"name":"charset","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.charset(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"conn:HTTP::Client::Response-instance-method","name":"conn","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":10,"url":null},"def":{"name":"conn","visibility":"Public","body":"@conn"}},{"html_id":"content_length:Int64?-instance-method","name":"content_length","doc":"Content Length","summary":"<p>Content Length</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":29,"url":null},"def":{"name":"content_length","return_type":"Int64 | ::Nil","visibility":"Public","body":"if value = @conn.headers[\"Content-Length\"]?\n  value.to_i64\nend"}},{"html_id":"content_type(*args,**options)-instance-method","name":"content_type","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":19,"url":null},"def":{"name":"content_type","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.content_type(*args, **options)"}},{"html_id":"content_type(*args,**options,&)-instance-method","name":"content_type","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":19,"url":null},"def":{"name":"content_type","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.content_type(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"cookies:HTTP::Cookies?-instance-method","name":"cookies","doc":"Return a `HTTP::Cookies` of parsed cookie headers or else nil.","summary":"<p>Return a <code>HTTP::Cookies</code> of parsed cookie headers or else nil.</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":36,"url":null},"def":{"name":"cookies","return_type":"HTTP::Cookies | ::Nil","visibility":"Public","body":"cookies = @conn.cookies ? @conn.cookies : HTTP::Cookies.from_server_headers(@conn.headers)\ncookies.map do |cookie|\n  if cookie.domain\n  else\n    cookie.domain = @uri.host\n  end\n  cookie\nend\ncookies\n"}},{"html_id":"filename:String?-instance-method","name":"filename","doc":"Return filename if it exists, else `Nil`.","summary":"<p>Return filename if it exists, else <code>Nil</code>.</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":92,"url":null},"def":{"name":"filename","return_type":"String | ::Nil","visibility":"Public","body":"headers[\"Content-Disposition\"]?.try do |value|\n  (value.split(\"filename=\"))[1]\nend"}},{"html_id":"headers(*args,**options)-instance-method","name":"headers","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":22,"url":null},"def":{"name":"headers","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.headers(*args, **options)"}},{"html_id":"headers(*args,**options,&)-instance-method","name":"headers","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":22,"url":null},"def":{"name":"headers","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.headers(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"history:Array(Response)-instance-method","name":"history","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":11,"url":null},"def":{"name":"history","return_type":"Array(Response)","visibility":"Public","body":"@history"}},{"html_id":"inspect-instance-method","name":"inspect","doc":"Returns a `String` representation of this object suitable\nto be embedded inside other expressions, sometimes providing\nmore information about this object.\n\n`#inspect` (and `#inspect(io)`) are the methods used when\nyou invoke `#to_s` or `#inspect` on an object that holds\nother objects and wants to show them. For example when you\ninvoke `Array#to_s`, `#inspect` will be invoked on each element:\n\n```\nary = [\"one\", \"two\", \"three, etc.\"]\nary.inspect # => [\"one\", \"two\", \"three, etc.\"]\n```\n\nNote that if Array invoked `#to_s` on each of the elements\nabove, the output would have been this:\n\n```\nary = [\"one\", \"two\", \"three, etc.\"]\n# If inspect invoked to_s on each element...\nary.inspect # => [one, two, three, etc.]\n```\n\nNote that it's not clear how many elements the array has,\nor which are they, because `#to_s` doesn't guarantee that\nthe string representation is clearly delimited (in the case\nof `String` the quotes are not shown).\n\nAlso note that sometimes the output of `#inspect` will look\nlike a Crystal expression that will compile, but this isn't\nalways the case, nor is it necessary. Notably, `Reference#inspect`\nand `Struct#inspect` return values that don't compile.\n\nClasses must usually **not** override this method. Instead,\nthey must override `inspect(io)`, which must append to the\ngiven `IO` object.","summary":"<p>Returns a <code>String</code> representation of this object suitable to be embedded inside other expressions, sometimes providing more information about this object.</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":115,"url":null},"def":{"name":"inspect","visibility":"Public","body":"\"#<#{self.class} #{version} #{status_code} #{status_message} #{headers.to_flat_h}>\""}},{"html_id":"links:Hash(String,Halite::HeaderLink)?-instance-method","name":"links","doc":"Return a list of parsed link headers proxies or else nil.","summary":"<p>Return a list of parsed link headers proxies or else nil.</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":49,"url":null},"def":{"name":"links","return_type":"Hash(String, Halite::HeaderLink) | ::Nil","visibility":"Public","body":"if raw = headers[\"Link\"]?\nelse\n  return\nend\nHeaderLink.parse(raw, uri)\n"}},{"html_id":"parse(name:String?=nil)-instance-method","name":"parse","doc":"Parse response body with corresponding MIME type adapter.","summary":"<p>Parse response body with corresponding MIME type adapter.</p>","abstract":false,"args":[{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"args_string":"(name : String? = nil)","args_html":"(name : String? = <span class=\"n\">nil</span>)","location":{"filename":"src/halite/response.cr","line_number":84,"url":null},"def":{"name":"parse","args":[{"name":"name","default_value":"nil","external_name":"name","restriction":"String | ::Nil"}],"visibility":"Public","body":"name || (name = content_type)\nif name\nelse\n  raise(Halite::Error.new(\"Missing media type\"))\nend\nif MimeType[name]?\nelse\n  raise(Halite::UnRegisterMimeTypeError.new(\"unregister MIME type adapter: #{name}\"))\nend\nMimeType[name].decode(to_s)\n"}},{"html_id":"raise_for_status-instance-method","name":"raise_for_status","doc":"Raise `Halite::ClientError`/`Halite::ServerError` if one occurred.\n\n- `4XX` raise an `Halite::ClientError` exception\n- `5XX` raise an `Halite::ServerError` exception\n- return `nil` with other status code\n\n```\nHalite.get(\"https://httpbin.org/status/404\").raise_for_status\n# => Unhandled exception: 404 not found error with url: https://httpbin.org/status/404  (Halite::ClientError)\n\nHalite.get(\"https://httpbin.org/status/500\", params: {\"foo\" => \"bar\"}).raise_for_status\n# => Unhandled exception: 500 internal server error error with url: https://httpbin.org/status/500?foo=bar  (Halite::ServerError)\n\nHalite.get(\"https://httpbin.org/status/301\").raise_for_status\n# => nil\n```","summary":"<p>Raise <code>Halite::ClientError</code>/<code>Halite::ServerError</code> if one occurred.</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":75,"url":null},"def":{"name":"raise_for_status","visibility":"Public","body":"if status_code >= 400 && status_code < 500\n  raise(Halite::ClientError.new(status_code: status_code, uri: uri))\nelse\n  if status_code >= 500 && status_code < 600\n    raise(Halite::ServerError.new(status_code: status_code, uri: uri))\n  end\nend"}},{"html_id":"rate_limit:Halite::RateLimit?-instance-method","name":"rate_limit","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":55,"url":null},"def":{"name":"rate_limit","return_type":"Halite::RateLimit | ::Nil","visibility":"Public","body":"RateLimit.parse(headers)"}},{"html_id":"status_code(*args,**options)-instance-method","name":"status_code","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":17,"url":null},"def":{"name":"status_code","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.status_code(*args, **options)"}},{"html_id":"status_code(*args,**options,&)-instance-method","name":"status_code","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":17,"url":null},"def":{"name":"status_code","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.status_code(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"status_message(*args,**options)-instance-method","name":"status_message","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":18,"url":null},"def":{"name":"status_message","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.status_message(*args, **options)"}},{"html_id":"status_message(*args,**options,&)-instance-method","name":"status_message","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":18,"url":null},"def":{"name":"status_message","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.status_message(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"success?(*args,**options)-instance-method","name":"success?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":20,"url":null},"def":{"name":"success?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.success?(*args, **options)"}},{"html_id":"success?(*args,**options,&)-instance-method","name":"success?","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":20,"url":null},"def":{"name":"success?","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.success?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"to_a-instance-method","name":"to_a","doc":"Return status_code, headers and body in a array","summary":"<p>Return status_code, headers and body in a array</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":106,"url":null},"def":{"name":"to_a","visibility":"Public","body":"[@conn.status_code, @conn.headers, to_s]"}},{"html_id":"to_raw-instance-method","name":"to_raw","doc":"Return raw of response","summary":"<p>Return raw of response</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":99,"url":null},"def":{"name":"to_raw","visibility":"Public","body":"io = IO::Memory.new\n@conn.to_io(io)\nio\n"}},{"html_id":"to_s(io)-instance-method","name":"to_s","abstract":false,"args":[{"name":"io","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/halite/response.cr","line_number":119,"url":null},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":""}],"visibility":"Public","body":"io << to_s"}},{"html_id":"to_s-instance-method","name":"to_s","doc":"Return String eagerly consume the entire body as a string","summary":"<p>Return String eagerly consume the entire body as a string</p>","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":111,"url":null},"def":{"name":"to_s","visibility":"Public","body":"@conn.body? ? @conn.body : @conn.body_io.to_s"}},{"html_id":"uri:URI-instance-method","name":"uri","abstract":false,"location":{"filename":"src/halite/response.cr","line_number":9,"url":null},"def":{"name":"uri","visibility":"Public","body":"@uri"}},{"html_id":"version(*args,**options)-instance-method","name":"version","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/halite/response.cr","line_number":16,"url":null},"def":{"name":"version","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@conn.version(*args, **options)"}},{"html_id":"version(*args,**options,&)-instance-method","name":"version","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/halite/response.cr","line_number":16,"url":null},"def":{"name":"version","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"visibility":"Public","body":"@conn.version(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}}]}]},{"html_id":"halite/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"locations":[{"filename":"src/halite/ext/http_headers_encode.cr","line_number":1,"url":null},{"filename":"src/halite/ext/http_params_encode.cr","line_number":1,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"doc":"The HTTP module contains `HTTP::Client`, `HTTP::Server` and `HTTP::WebSocket` implementations.","summary":"<p>The HTTP module contains <code>HTTP::Client</code>, <code>HTTP::Server</code> and <code>HTTP::WebSocket</code> implementations.</p>","types":[{"html_id":"halite/HTTP/Headers","path":"HTTP/Headers.html","kind":"struct","full_name":"HTTP::Headers","name":"Headers","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/ext/http_headers_encode.cr","line_number":3,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"halite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"halite/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"This is **extension** apply in Halite.","summary":"<p>This is <strong>extension</strong> apply in Halite.</p>","class_methods":[{"html_id":"encode(data:Hash(String,_)|NamedTuple):HTTP::Headers-class-method","name":"encode","doc":"Returns the given key value pairs as HTTP Headers\n\nEvery parameter added is directly written to an IO, where keys are properly escaped.\n\n```\nHTTP::Headers.encode({\n  content_type: \"application/json\",\n})\n# => \"HTTP::Headers{\"Content-Type\" => \"application/json\"}\"\n\nHTTP::Headers.encode({\n  \"conTENT-type\": \"application/json\",\n})\n# => \"HTTP::Headers{\"Content-Type\" => \"application/json\"}\"\n```","summary":"<p>Returns the given key value pairs as HTTP Headers</p>","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"Hash(String, _) | NamedTuple"}],"args_string":"(data : Hash(String, _) | NamedTuple) : HTTP::Headers","args_html":"(data : Hash(String, _) | NamedTuple) : <a href=\"../HTTP/Headers.html\">HTTP::Headers</a>","location":{"filename":"src/halite/ext/http_headers_encode.cr","line_number":19,"url":null},"def":{"name":"encode","args":[{"name":"data","external_name":"data","restriction":"Hash(String, _) | NamedTuple"}],"return_type":"HTTP::Headers","visibility":"Public","body":"::HTTP::Headers.new.tap do |builder|\n  data = data.is_a?(NamedTuple) ? data.to_h : data\n  data.each do |key, value|\n    key = ((key.to_s.gsub(\"_\", \"-\")).split(\"-\")).map do |v|\n      v.capitalize\n    end.join(\"-\")\n    if (key == \"Content-Length\") && (!(value =~ (/^\\d+$/)))\n      next\n    end\n    builder.add(key, value.is_a?(Array(String)) ? value : value.to_s)\n  end\nend"}},{"html_id":"encode(**data)-class-method","name":"encode","doc":"Same as `#encode`","summary":"<p>Same as <code><a href=\"../HTTP/Headers.html#encode%28%2A%2Adata%29-class-method\">#encode</a></code></p>","abstract":false,"location":{"filename":"src/halite/ext/http_headers_encode.cr","line_number":33,"url":null},"def":{"name":"encode","double_splat":{"name":"data","external_name":"data","restriction":""},"visibility":"Public","body":"encode(data)"}}],"instance_methods":[{"html_id":"to_flat_h-instance-method","name":"to_flat_h","doc":"Similar as `Hahs#to_h` but return `String` if it has one value of the key.\n\n```\nheaders = HTTP::Headers{\"Accepts\" => [\"application/json\", \"text/html\"], \"Content-Type\" => [\"text/html\"]}\nheaders[\"Accepts\"]      # => [\"application/json\", \"text/html\"]\nheaders[\"Content-Type\"] # => \"text/html\"\n```","summary":"<p>Similar as <code>Hahs#to_h</code> but return <code>String</code> if it has one value of the key.</p>","abstract":false,"location":{"filename":"src/halite/ext/http_headers_encode.cr","line_number":44,"url":null},"def":{"name":"to_flat_h","visibility":"Public","body":"@hash.each_with_object({} of String => String | Array(String)) do |__arg0, obj|\n  key = __arg0[0]\n  values = __arg0[1]\n  obj[key.name] = case values\n  when String\n    values.as(String)\n  when Array\n    values.size == 1 ? values[0].as(String) : values.as(Array(String))\n  else\n    raise(Halite::Error.new(\"Not support type `#{values.class} with value: #{values}\"))\n  end\nend"}}]},{"html_id":"halite/URI/Params","path":"URI/Params.html","kind":"struct","full_name":"URI::Params","name":"Params","abstract":false,"superclass":{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"halite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"halite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"halite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"halite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/halite/ext/http_params_encode.cr","line_number":3,"url":null}],"repository_name":"halite","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"halite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"}],"namespace":{"html_id":"halite/URI","kind":"class","full_name":"URI","name":"URI"},"doc":"An ordered multi-value mapped collection representing generic URI parameters.","summary":"<p>An ordered multi-value mapped collection representing generic URI parameters.</p>","class_methods":[{"html_id":"encode(named_tuple:NamedTuple):String-class-method","name":"encode","doc":"Returns the given key value pairs as a url-encoded query.\n\nEvery parameter added is directly written to an IO, where keys and values are properly escaped.\n\n```\nHTTP::Params.encode({\n  name: \"Lizeth Gusikowski\",\n  skill: [\"ruby\", \"crystal\"],\n  company: {\n    name: \"Keeling Inc\",\n  },\n  avatar: File.open(\"avatar_big.png\"\n})\n# => \"name=Lizeth+Gusikowski&skill=ruby&skill=crystal&company=%7B%22name%22+%3D%3E+%22Keeling+Inc%22%7D&avatar=avatar_big.png\"\n```","summary":"<p>Returns the given key value pairs as a url-encoded query.</p>","abstract":false,"args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"args_string":"(named_tuple : NamedTuple) : String","args_html":"(named_tuple : NamedTuple) : String","location":{"filename":"src/halite/ext/http_params_encode.cr","line_number":56,"url":null},"def":{"name":"encode","args":[{"name":"named_tuple","external_name":"named_tuple","restriction":"NamedTuple"}],"return_type":"String","visibility":"Public","body":"encode(named_tuple.to_h)"}},{"html_id":"encode(hash:Hash):String-class-method","name":"encode","doc":"Returns the given key value pairs as a url-encoded query.\n\nEvery parameter added is directly written to an IO, where keys and values are properly escaped.\n\n```\nHTTP::Params.encode({\n  \"name\"    => \"Lizeth Gusikowski\",\n  \"skill\"   => [\"ruby\", \"crystal\"],\n  \"company\" => {\n    \"name\" => \"Keeling Inc\",\n  },\n  \"avatar\" => File.open(\"avatar_big.png\"),\n})\n# => \"name=Lizeth+Gusikowski&skill=ruby&skill=crystal&company=%7B%22name%22+%3D%3E+%22Keeling+Inc%22%7D&avatar=avatar_big.png\"\n```","summary":"<p>Returns the given key value pairs as a url-encoded query.</p>","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"args_string":"(hash : Hash) : String","args_html":"(hash : Hash) : String","location":{"filename":"src/halite/ext/http_params_encode.cr","line_number":19,"url":null},"def":{"name":"encode","args":[{"name":"hash","external_name":"hash","restriction":"Hash"}],"return_type":"String","visibility":"Public","body":"::HTTP::Params.build do |form|\n  hash.each do |key, value|\n    key = key.to_s\n    case value\n    when Array\n      value.each do |item|\n        form.add(\"#{key}\", item.to_s)\n      end\n    when File\n      form.add(key, (value.as(File)).path)\n    when Hash\n      value.each do |hkey, hvalue|\n        form.add(\"#{key}[#{hkey}]\", hvalue.to_s)\n      end\n    else\n      form.add(key, value.to_s)\n    end\n  end\nend"}},{"html_id":"encode(**named_tuple):String-class-method","name":"encode","doc":"Returns the given key value pairs as a url-encoded query.\n\nEvery parameter added is directly written to an IO, where keys and values are properly escaped.\n\n```\nHTTP::Params.encode(\n  name: \"Lizeth Gusikowski\",\n  skill: [\"ruby\", \"crystal\"],\n  company: {\n    name: \"Keeling Inc\",\n  },\n  avatar: File.open(\"avatar_big.png\"\n)\n# => \"name=Lizeth+Gusikowski&skill=ruby&skill=crystal&company=%7B%22name%22+%3D%3E+%22Keeling+Inc%22%7D&avatar=avatar_big.png\"\n```","summary":"<p>Returns the given key value pairs as a url-encoded query.</p>","abstract":false,"location":{"filename":"src/halite/ext/http_params_encode.cr","line_number":75,"url":null},"def":{"name":"encode","double_splat":{"name":"named_tuple","external_name":"named_tuple","restriction":""},"return_type":"String","visibility":"Public","body":"encode(named_tuple)"}}]}]}]}})